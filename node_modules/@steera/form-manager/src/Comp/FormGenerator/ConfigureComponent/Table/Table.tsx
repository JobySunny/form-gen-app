import React from 'react';
import {OptItem, TableProps as Props} from './Table.interface';
import {useAppDispatch} from '../../StoreProvider';
import {Action} from '../../Store';
import {getThrottle} from '../../../../Utils/commonUtils';

import cn from './Table.module.scss';

export function Table(props: Props) {
  const dispatch = useAppDispatch();
  const throttle = getThrottle('tableChange');
  const [options, setOptions] = React.useState<Props['optionItems']>([]);
  let obj = JSON.parse(JSON.stringify(options));

  React.useEffect(() => {
    setOptions(props.optionItems);
  }, [props.optionItems]);

  const onOptionChange =
    (id: number): React.ChangeEventHandler<HTMLInputElement> =>
    (e) => {
      setOptions((options) =>
        options.map((op, i) => {
          if (i === id) {
            return {...op, [e.target.name]: e.target.value};
          } else {
            return op;
          }
        })
      );
    };

  React.useEffect(() => {
    throttle(() => {
      dispatch(Action.updateOptionItem({name: 'options', options}));
    });
  }, [options]);

  const addnew =
    (id: number): React.MouseEventHandler<HTMLInputElement> =>
    (e) => {
      obj.splice(id + 1, 0, {label: 'option', value: 'value'});
      setOptions(obj);
    };

  const deleterow =
    (id: number): React.MouseEventHandler<HTMLInputElement> =>
    (e) => {
      if (obj.length > 1) {
        obj.splice(id, 1);
        setOptions(obj);
      }
    };

  const renderOptions = (opt: OptItem, id: number) => (
    <div className={cn.tbl_b} key={id}>
      {Object.keys(props.columns).map((key: string) => (
        <input
          key={opt[key]}
          className={cn.tbl_b__col}
          type={props.columns[key].input.type as string}
          name={props.columns[key].input.name as string}
          required={props.columns[key].input.required as boolean}
          defaultValue={opt[key]}
          onBlur={onOptionChange(id)}
        />
      ))}
      <div key='trash' className={cn.tbl_b__col} onClick={deleterow(id)}>
        üóëÔ∏è
      </div>
      <div key='addnew' className={cn.tbl_b__col} onClick={addnew(id)}>
        ‚ûï
      </div>
    </div>
  );

  const headerColumns = (col: string) => (
    <div key={col} className={cn.tbl_h__col}>
      {props.columns[col].title}
    </div>
  );

  return (
    <>
      <p className={cn.title}>{props.title}</p>
      <div className={cn.tbl}>
        <div className={cn.tbl_h}>
          {Object.keys(props.columns).map(headerColumns)}
          <div key='trash' className={cn.tbl_h__col}>
            Delete
          </div>
          <div key='addnew' className={cn.tbl_h__col}>
            Add New
          </div>
        </div>
        {options.map(renderOptions)}
      </div>
    </>
  );
}
