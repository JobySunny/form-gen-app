import React from 'react';
import {InputProps as Props} from './Input.interface';

import {INPUT} from '../../../../Utils/constants';
import {useAppDispatch} from '../../StoreProvider';
import {Action} from '../../Store';
import {getThrottle} from '../../../../Utils/commonUtils';

import cn from './Input.module.scss';

export function Input(props: Props) {
  const dispatch = useAppDispatch();
  const throttle = getThrottle('inputChange');
  const [value, setValue] = React.useState(props.value);

  React.useEffect(() => {
    if (props.value !== value) {
      setValue(props.value);
    }
  }, [props.value]);

  const onChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {
    if (INPUT.DATE === props.type) {
      setValue(e?.target?.value);
    }
    if (INPUT.NUMBER === props.type) {
      setValue(e?.target?.valueAsNumber);
    }
    if (INPUT.TEXT === props.type) {
      setValue(e?.target?.value);
    }
  };

  React.useEffect(() => {
    if (props.value !== value) {
      throttle(() => {
        dispatch(Action.updateOptionItem({name: props.name, value}));
      });
    }
  }, [value]);

  return (
    <input
      id={props.id}
      className={cn.inp}
      type={props.type}
      name={props.name}
      disabled={props.disabled}
      max={props.max}
      min={props.min}
      minLength={props.minLength}
      maxLength={props.maxLength}
      value={value}
      required={props.required}
      onChange={onChange}
    />
  );
}
