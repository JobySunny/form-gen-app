import React from 'react';
import {RadioBoxProps as Props} from './RadioBox.interface';

import {
  RadioBox as RB,
  RadioBoxProps as RBP,
} from '../../../../Components/RadioBox';
import {FormContext, setCusotmElementValidity} from '../../FormRenderer.utils';

import cn from './RadioBox.module.scss';

export function RadioBox(props: Props) {
  const {submitted} = React.useContext(FormContext);

  const [checked, setChecked] = React.useState<boolean>(props.checked);

  React.useEffect(() => {
    if (submitted) {
      setCusotmElementValidity(props.id, props.invalidInputMessage);
    }
  }, [submitted]);

  React.useEffect(() => {
    setChecked(props.checked);
  }, [props.checked]);

  const onChange: RBP['onChange'] = (e: any) => {
    setChecked(e.target.checked);
    if (submitted) {
      setCusotmElementValidity(props.id, props.invalidInputMessage);
    }
  };
  return (
    <RB
      id={props.id}
      label={props.label}
      name={props.name}
      className={props.className}
      required={props.required}
      invalidInputMessage={props.invalidInputMessage}
      isSubmitted={props.isSubmitted}
      disabled={props.disabled}
      checked={checked}
      value={props.value}
      onChange={onChange}
    />
  );
}
