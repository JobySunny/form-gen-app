import {FormRendererProps} from '../../FormRenderer.interface';
import {ComponentOptionItemType as OptionType} from '../../../Comp.interface';

export function getID(option: OptionType) {
  return option.input.value;
}

export function getLabel(option: OptionType) {
  return option.input.value;
}

export function getName(option: OptionType) {
  return option.input.value;
}

export function getDisabled(option: OptionType) {
  return option.input.checked;
}

export function getRequired(option: OptionType) {
  return option.input.checked;
}

export function getPlaceholder(option: OptionType) {
  return option.input.value;
}

export function getClassName(option: OptionType) {
  return option.input.value;
}

export function getInvalidMessage(option: OptionType) {
  return option.input.value;
}

export function getOptions(option: OptionType) {
  return option.input.optionItems;
}

export function getValue(
  templateValues: FormRendererProps['templateValues'],
  options: any
) {
  const name = options.name.input.value;
  const optionItems = options.options.input.optionItems;

  if (templateValues && templateValues.hasOwnProperty(name)) {
    return optionItems.find((o: any) => o.value === templateValues[name]);
  }
}
