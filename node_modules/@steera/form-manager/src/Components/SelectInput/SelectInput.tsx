import React from 'react';
import {SelectInputProps as Props, Option} from './SelectInput.interface';

import {Select as S} from '../Select';

/**
 *  SelectInput
 *   - Abstracted Select Component. That works on to of Select Component
 */
export function SelectInput(props: Props): JSX.Element {
  const onSearch = async (input: string): Promise<Option[]> =>
    new Promise((r) => {
      const searchInput = input.toLowerCase();
      if (searchInput.trim()) {
        const options = props.options.filter((o: Option) => {
          const label = o.label.toLowerCase();
          return label.search(searchInput) >= 0;
        });
        r(options);
      } else {
        r(props.options);
      }
    });

  return (
    <S
      id={props.id}
      name={props.name}
      className={props.className}
      testId={props.testId}
      disabled={props.disabled}
      onSearch={onSearch}
      onSelect={props.onChange}
      value={props.value}
      placeholder={props.placeholder}
      required={props.required}
    />
  );
}
