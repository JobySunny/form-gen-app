import * as React from 'react';
import {OptionsProps as Props} from './Options.interface';
import {Option as OptionType} from '../Select.interface';

import {Empty} from './Empty';
import {Option} from './Option';
import {Loading} from './Loading';

/**
 * Options
 *  Component that decides between what to display
 *   - EmptyMessage
 *   - LoadingMessage
 *   - List<Options>
 */
export function Options(props: Props): JSX.Element | null {
  const {
    show,
    options = [],
    testId,
    loading = false,
    optionClass = '',
    className = '',
  } = props;

  const renderOption = ({id, label, ...rest}: OptionType): JSX.Element => (
    <Option
      id={id}
      key={rest.value}
      label={label}
      testId={testId}
      className={optionClass}
      onSelect={props.onSelect}
      {...rest}
    />
  );

  const renderOptions = () => {
    if (loading) {
      return <Loading testId={testId} />;
    }
    if (options.length) {
      return props.options.map(renderOption);
    } else {
      return <Empty testId={testId} />;
    }
  };

  const optionsTestId = `${testId}_options`;

  if (show) {
    return (
      <ul className={className} data-testid={optionsTestId}>
        {renderOptions()}
      </ul>
    );
  } else {
    return null;
  }
}
