import * as React from 'react';
import {WrapProps as Props} from './Wrap.interface';
import {SELECT_TAG} from '../Select.constants';
import {getCheckIfChild} from '../Select.utils';
import cn from '../Select.module.scss';

/**
 * Wrap
 *  Wrapper Component inside which all atoms for AsyncSelect Component are added
 */
export function Wrap(props: Props): JSX.Element {
  const onFocus = (e: React.FocusEvent) => {
    const target: any = e.target;
    let selectElement = target.querySelector(SELECT_TAG);
    props.onFocus(selectElement);
  };

  const onBlur = (e: React.FocusEvent) => {
    const checkIfChild = getCheckIfChild(e.currentTarget as any);
    if (!checkIfChild(e.relatedTarget as any)) {
      const target: any = e.target;
      let selectElement = target.querySelector(SELECT_TAG);
      props.onBlur(selectElement);
    }
  };

  const className = `${props.className} ${
    props.disabled ? `${cn.disabled} disabled` : ''
  }`;

  return (
    <div
      tabIndex={0}
      onBlur={onBlur}
      onFocus={onFocus}
      data-testid={props.testId}
      className={className}>
      {props.children}
    </div>
  );
}
