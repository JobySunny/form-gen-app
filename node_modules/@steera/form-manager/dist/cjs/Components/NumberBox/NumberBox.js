"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NumberBox = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importDefault(require("react"));
const Number_1 = require("../Number");
const Label_1 = require("../Label");
const Hint_1 = require("../Hint");
const commonUtils_1 = require("../../Utils/commonUtils");
const NumberBox_module_scss_1 = __importDefault(require("./NumberBox.module.scss"));
function NumberBox(props) {
    const [valid, setValid] = react_1.default.useState(true);
    const onEnterKey = (0, commonUtils_1.getOnKey)(commonUtils_1.KEY.ENTER);
    const getClassName = (ele = '') => `${NumberBox_module_scss_1.default[`nbox${ele}`]} ${props.className}${ele}`;
    const onKeyUp = (e) => {
        if (props.onKeyUp)
            props.onKeyUp(e);
        onEnterKey(() => {
            if (props.onEnterKey)
                props.onEnterKey(e);
        }, e);
    };
    const onBlur = (e) => {
        const { validity } = e.target;
        setValid(validity.valid);
        if (props.onBlur)
            props.onBlur(e);
    };
    const getHintShow = () => {
        if (props.isSubmitted) {
            return !valid;
        }
        else
            return false;
    };
    return ((0, jsx_runtime_1.jsxs)("div", Object.assign({ className: getClassName() }, { children: [(0, jsx_runtime_1.jsx)(Label_1.Label, { for: props.id, text: props.label, required: props.required, className: getClassName('_label') }), (0, jsx_runtime_1.jsx)(Number_1.Number, { id: props.id, name: props.name, value: props.value, defaultValue: props.defaultValue, min: props.min, max: props.max, className: getClassName('_input'), disabled: props.disabled, required: props.required, onChange: props.onChange, onBlur: onBlur, onFocus: props.onFocus, onKeyUp: onKeyUp, placeholder: props.placeholder }), (0, jsx_runtime_1.jsx)(Hint_1.Hint, { show: getHintShow(), message: props.invalidInputMessage, className: getClassName('_hint') })] })));
}
exports.NumberBox = NumberBox;
//# sourceMappingURL=NumberBox.js.map