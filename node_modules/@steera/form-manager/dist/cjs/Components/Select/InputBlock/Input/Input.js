"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Input = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const React = __importStar(require("react"));
const Select_constants_1 = require("../../Select.constants");
const Select_utils_1 = require("../../Select.utils");
/**
 * Input
 *  HTML Input element; Fires onSearch with throttle;
 */
function Input(props) {
    var _a;
    const throttle = (0, Select_utils_1.getThrottle)('onSearch');
    const [search, setSearch] = React.useState((_a = props.value) !== null && _a !== void 0 ? _a : Select_constants_1.INITIAL_SEARCH_TEXT);
    const onChange = (e) => {
        setSearch(e.target.value);
    };
    React.useEffect(() => {
        if (!(search === props.value)) {
            throttle(() => {
                props.onSearch(search);
            });
        }
    }, [search]);
    return ((0, jsx_runtime_1.jsx)("input", { tabIndex: -1, value: search, autoFocus: true, onChange: onChange, type: Select_constants_1.INPUT_TYPE_TEXT, "data-testid": props.testId, className: props.className }));
}
exports.Input = Input;
//# sourceMappingURL=Input.js.map