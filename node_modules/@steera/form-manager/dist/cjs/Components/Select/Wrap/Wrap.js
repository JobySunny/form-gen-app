"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Wrap = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const Select_constants_1 = require("../Select.constants");
const Select_utils_1 = require("../Select.utils");
const Select_module_scss_1 = __importDefault(require("../Select.module.scss"));
/**
 * Wrap
 *  Wrapper Component inside which all atoms for AsyncSelect Component are added
 */
function Wrap(props) {
    const onFocus = (e) => {
        const target = e.target;
        let selectElement = target.querySelector(Select_constants_1.SELECT_TAG);
        props.onFocus(selectElement);
    };
    const onBlur = (e) => {
        const checkIfChild = (0, Select_utils_1.getCheckIfChild)(e.currentTarget);
        if (!checkIfChild(e.relatedTarget)) {
            const target = e.target;
            let selectElement = target.querySelector(Select_constants_1.SELECT_TAG);
            props.onBlur(selectElement);
        }
    };
    const className = `${props.className} ${props.disabled ? `${Select_module_scss_1.default.disabled} disabled` : ''}`;
    return ((0, jsx_runtime_1.jsx)("div", Object.assign({ tabIndex: 0, onBlur: onBlur, onFocus: onFocus, "data-testid": props.testId, className: className }, { children: props.children })));
}
exports.Wrap = Wrap;
//# sourceMappingURL=Wrap.js.map