"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckBox = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importDefault(require("react"));
const Check_1 = require("../Check");
const Label_1 = require("../Label");
const Hint_1 = require("../Hint");
const CheckBox_module_scss_1 = __importDefault(require("./CheckBox.module.scss"));
function CheckBox(props) {
    const [valid, setValid] = react_1.default.useState(true);
    const getClassName = (ele = '') => `${CheckBox_module_scss_1.default[`cbox${ele}`]} ${props.className}${ele}`;
    const getHintShow = () => {
        if (props.isSubmitted) {
            return !valid;
        }
        else
            return false;
    };
    return ((0, jsx_runtime_1.jsxs)("div", Object.assign({ className: getClassName() }, { children: [(0, jsx_runtime_1.jsx)(Check_1.Check, { id: props.id, name: props.name, value: props.value, className: getClassName('_input'), disabled: props.disabled, required: props.required, onChange: props.onChange, checked: props.checked }), (0, jsx_runtime_1.jsx)(Label_1.Label, { for: props.id, text: props.label, required: props.required, className: getClassName('_label') }), (0, jsx_runtime_1.jsx)(Hint_1.Hint, { show: getHintShow(), message: props.invalidInputMessage, className: getClassName('_hint') })] })));
}
exports.CheckBox = CheckBox;
//# sourceMappingURL=CheckBox.js.map