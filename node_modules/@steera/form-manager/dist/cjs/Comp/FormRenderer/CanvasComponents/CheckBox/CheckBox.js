"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckBox = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importDefault(require("react"));
const CheckBox_1 = require("../../../../Components/CheckBox");
const FormRenderer_utils_1 = require("../../FormRenderer.utils");
function CheckBox(props) {
    const { submitted } = react_1.default.useContext(FormRenderer_utils_1.FormContext);
    const [checked, setChecked] = react_1.default.useState(props.checked);
    react_1.default.useEffect(() => {
        if (submitted) {
            (0, FormRenderer_utils_1.setCusotmElementValidity)(props.id, props.invalidInputMessage);
        }
    }, [submitted]);
    react_1.default.useEffect(() => {
        setChecked(props.checked);
    }, [props.checked]);
    const onChange = (e) => {
        setChecked(e.target.checked);
        if (submitted) {
            (0, FormRenderer_utils_1.setCusotmElementValidity)(props.id, props.invalidInputMessage);
        }
    };
    return ((0, jsx_runtime_1.jsx)(CheckBox_1.CheckBox, { id: props.id, label: props.label, name: props.name, className: props.className, required: props.required, value: props.value, invalidInputMessage: props.invalidInputMessage, isSubmitted: props.isSubmitted, disabled: props.disabled, checked: checked, onChange: onChange }));
}
exports.CheckBox = CheckBox;
//# sourceMappingURL=CheckBox.js.map