"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextBox = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importDefault(require("react"));
const TextBox_1 = require("../../../../Components/TextBox");
const FormRenderer_utils_1 = require("../../FormRenderer.utils");
function TextBox(props) {
    const { submitted } = react_1.default.useContext(FormRenderer_utils_1.FormContext);
    const [value, setValue] = react_1.default.useState();
    react_1.default.useEffect(() => {
        if (submitted) {
            (0, FormRenderer_utils_1.setCusotmElementValidity)(props.id, props.invalidInputMessage);
        }
    }, [submitted]);
    react_1.default.useEffect(() => {
        setValue(props.value);
    }, [props.value]);
    const onChange = (e) => {
        setValue(e.target.value);
        if (submitted) {
            (0, FormRenderer_utils_1.setCusotmElementValidity)(props.id, props.invalidInputMessage);
        }
    };
    return ((0, jsx_runtime_1.jsx)(TextBox_1.TextBox, { id: props.id, label: props.label, name: props.name, value: value, pattern: props.pattern, className: props.className, required: props.required, minLength: props.minLength, maxLength: props.maxLength, invalidInputMessage: props.invalidInputMessage, isSubmitted: props.isSubmitted, disabled: props.disabled, placeholder: props.placeholder, onChange: onChange }));
}
exports.TextBox = TextBox;
//# sourceMappingURL=TextBox.js.map