"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Input = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importDefault(require("react"));
const constants_1 = require("../../../../Utils/constants");
const StoreProvider_1 = require("../../StoreProvider");
const Store_1 = require("../../Store");
const commonUtils_1 = require("../../../../Utils/commonUtils");
const Input_module_scss_1 = __importDefault(require("./Input.module.scss"));
function Input(props) {
    const dispatch = (0, StoreProvider_1.useAppDispatch)();
    const throttle = (0, commonUtils_1.getThrottle)('inputChange');
    const [value, setValue] = react_1.default.useState(props.value);
    react_1.default.useEffect(() => {
        if (props.value !== value) {
            setValue(props.value);
        }
    }, [props.value]);
    const onChange = (e) => {
        var _a, _b, _c;
        if (constants_1.INPUT.DATE === props.type) {
            setValue((_a = e === null || e === void 0 ? void 0 : e.target) === null || _a === void 0 ? void 0 : _a.value);
        }
        if (constants_1.INPUT.NUMBER === props.type) {
            setValue((_b = e === null || e === void 0 ? void 0 : e.target) === null || _b === void 0 ? void 0 : _b.valueAsNumber);
        }
        if (constants_1.INPUT.TEXT === props.type) {
            setValue((_c = e === null || e === void 0 ? void 0 : e.target) === null || _c === void 0 ? void 0 : _c.value);
        }
    };
    react_1.default.useEffect(() => {
        if (props.value !== value) {
            throttle(() => {
                dispatch(Store_1.Action.updateOptionItem({ name: props.name, value }));
            });
        }
    }, [value]);
    return ((0, jsx_runtime_1.jsx)("input", { id: props.id, className: Input_module_scss_1.default.inp, type: props.type, name: props.name, disabled: props.disabled, max: props.max, min: props.min, minLength: props.minLength, maxLength: props.maxLength, value: value, required: props.required, onChange: onChange }));
}
exports.Input = Input;
//# sourceMappingURL=Input.js.map