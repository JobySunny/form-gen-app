"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Table = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importDefault(require("react"));
const StoreProvider_1 = require("../../StoreProvider");
const Store_1 = require("../../Store");
const commonUtils_1 = require("../../../../Utils/commonUtils");
const Table_module_scss_1 = __importDefault(require("./Table.module.scss"));
function Table(props) {
    const dispatch = (0, StoreProvider_1.useAppDispatch)();
    const throttle = (0, commonUtils_1.getThrottle)('tableChange');
    const [options, setOptions] = react_1.default.useState([]);
    let obj = JSON.parse(JSON.stringify(options));
    react_1.default.useEffect(() => {
        setOptions(props.optionItems);
    }, [props.optionItems]);
    const onOptionChange = (id) => (e) => {
        setOptions((options) => options.map((op, i) => {
            if (i === id) {
                return Object.assign(Object.assign({}, op), { [e.target.name]: e.target.value });
            }
            else {
                return op;
            }
        }));
    };
    react_1.default.useEffect(() => {
        throttle(() => {
            dispatch(Store_1.Action.updateOptionItem({ name: 'options', options }));
        });
    }, [options]);
    const addnew = (id) => (e) => {
        obj.splice(id + 1, 0, { label: 'option', value: 'value' });
        setOptions(obj);
    };
    const deleterow = (id) => (e) => {
        if (obj.length > 1) {
            obj.splice(id, 1);
            setOptions(obj);
        }
    };
    const renderOptions = (opt, id) => ((0, jsx_runtime_1.jsxs)("div", Object.assign({ className: Table_module_scss_1.default.tbl_b }, { children: [Object.keys(props.columns).map((key) => ((0, jsx_runtime_1.jsx)("input", { className: Table_module_scss_1.default.tbl_b__col, type: props.columns[key].input.type, name: props.columns[key].input.name, required: props.columns[key].input.required, defaultValue: opt[key], onBlur: onOptionChange(id) }, opt[key]))), (0, jsx_runtime_1.jsx)("div", Object.assign({ className: Table_module_scss_1.default.tbl_b__col, onClick: deleterow(id) }, { children: "\uD83D\uDDD1\uFE0F" }), 'trash'), (0, jsx_runtime_1.jsx)("div", Object.assign({ className: Table_module_scss_1.default.tbl_b__col, onClick: addnew(id) }, { children: "\u2795" }), 'addnew')] }), id));
    const headerColumns = (col) => ((0, jsx_runtime_1.jsx)("div", Object.assign({ className: Table_module_scss_1.default.tbl_h__col }, { children: props.columns[col].title }), col));
    return ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)("p", Object.assign({ className: Table_module_scss_1.default.title }, { children: props.title })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: Table_module_scss_1.default.tbl }, { children: [(0, jsx_runtime_1.jsxs)("div", Object.assign({ className: Table_module_scss_1.default.tbl_h }, { children: [Object.keys(props.columns).map(headerColumns), (0, jsx_runtime_1.jsx)("div", Object.assign({ className: Table_module_scss_1.default.tbl_h__col }, { children: "Delete" }), 'trash'), (0, jsx_runtime_1.jsx)("div", Object.assign({ className: Table_module_scss_1.default.tbl_h__col }, { children: "Add New" }), 'addnew')] })), options.map(renderOptions)] }))] }));
}
exports.Table = Table;
//# sourceMappingURL=Table.js.map