"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigureComponent = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importDefault(require("react"));
const StoreProvider_1 = require("../StoreProvider");
const Store_1 = require("../Store");
const Input_1 = require("./Input");
const constants_1 = require("../../../Utils/constants");
const Checkbox_1 = require("./Checkbox");
const Select_1 = require("./Select");
const Label_1 = require("../../../Components/Label");
const Option_1 = require("./Option");
const Table_1 = require("./Table");
const pathUtils_1 = require("../../../Utils/pathUtils");
const ConfigureComponent_module_scss_1 = __importDefault(require("./ConfigureComponent.module.scss"));
function ConfigureComponent(props) {
    const component = (0, StoreProvider_1.useAppSelector)(Store_1.Selector.getSelectedNode);
    const selectedNodePath = (0, StoreProvider_1.useAppSelector)(Store_1.Selector.getSelectedNodePath);
    const dispatch = (0, StoreProvider_1.useAppDispatch)();
    const renderTextInput = (o, key) => ((0, jsx_runtime_1.jsxs)(Option_1.Option, Object.assign({ className: ConfigureComponent_module_scss_1.default.conInp_list__opt }, { children: [(0, jsx_runtime_1.jsx)(Label_1.Label, { text: o.title, for: key, className: ConfigureComponent_module_scss_1.default.label, required: o.input.required }, `${key}_label`), (0, jsx_runtime_1.jsx)(Input_1.Input, { id: key, name: key, type: o.input.type, disabled: o.input.disabled, maxLength: o.input.maxLength, minLength: o.input.minLength, value: o.input.value, required: o.input.required }, `${key}_input`)] }), key));
    const renderNumberInput = (o, key) => ((0, jsx_runtime_1.jsxs)(Option_1.Option, Object.assign({ className: ConfigureComponent_module_scss_1.default.conInp_list__opt }, { children: [(0, jsx_runtime_1.jsx)(Label_1.Label, { text: o.title, for: key, className: ConfigureComponent_module_scss_1.default.label, required: o.input.required }, `${key}_label`), (0, jsx_runtime_1.jsx)(Input_1.Input, { id: key, name: key, type: o.input.type, max: o.input.max, min: o.input.min, value: o.input.value, required: o.input.required, disabled: o.input.disabled }, `${key}_input`)] }), key));
    const renderCheck = (o, key) => ((0, jsx_runtime_1.jsxs)(Option_1.Option, Object.assign({ className: ConfigureComponent_module_scss_1.default.conInp_list__opt }, { children: [(0, jsx_runtime_1.jsx)(Label_1.Label, { text: o.title, for: key, className: ConfigureComponent_module_scss_1.default.label, required: o.input.required }, `${key}_label`), (0, jsx_runtime_1.jsx)(Checkbox_1.Checkbox, { id: key, name: key, type: o.input.type, value: o.input.value, required: o.input.required, disabled: o.input.disabled, checked: o.input.checked }, `${key}_input`)] }), key));
    const renderSelect = (o, key) => ((0, jsx_runtime_1.jsxs)(Option_1.Option, Object.assign({ className: ConfigureComponent_module_scss_1.default.conInp_list__opt }, { children: [(0, jsx_runtime_1.jsx)(Label_1.Label, { text: o.title, for: key, className: ConfigureComponent_module_scss_1.default.label, required: o.input.required }, `${key}_label`), (0, jsx_runtime_1.jsx)(Select_1.Select, { id: key, name: key, options: o.input.options, required: o.input.required, value: o.input.value, disabled: o.input.disabled }, `${key}_input`)] }), key));
    const renderTable = (o, key) => ((0, jsx_runtime_1.jsx)(Option_1.Option, Object.assign({ className: ConfigureComponent_module_scss_1.default.conInp_list__opt }, { children: (0, jsx_runtime_1.jsx)(Table_1.Table, { title: o.title, columns: o.input.columns, optionItems: o.input.optionItems }, `${key}_table`) }), key));
    const renderOption = (option, key) => {
        switch (option.input.type) {
            case constants_1.INPUT.TEXT:
                return renderTextInput(option, key);
            case constants_1.INPUT.NUMBER:
            case constants_1.INPUT.DATE:
                return renderNumberInput(option, key);
            case constants_1.INPUT.CHECKBOX:
                return renderCheck(option, key);
            case constants_1.INPUT.SELECT:
                return renderSelect(option, key);
            case constants_1.INPUT.TABLE:
                return renderTable(option, key);
            default:
                return null;
        }
    };
    const optionKey = (key) => renderOption(component.options[key], key);
    const onClickClose = () => {
        dispatch(Store_1.Action.closeConfigWindow());
    };
    const canDelete = react_1.default.useMemo(() => pathUtils_1.Path.parseToNodes(selectedNodePath).length > 1, [selectedNodePath]);
    const onClickDelete = () => {
        if (canDelete) {
            dispatch(Store_1.Action.deleteNode());
        }
    };
    const trashClass = `${ConfigureComponent_module_scss_1.default.trash} ${canDelete ? '' : ConfigureComponent_module_scss_1.default.disabled}`;
    return ((0, jsx_runtime_1.jsxs)("div", Object.assign({ className: ConfigureComponent_module_scss_1.default.conInp }, { children: [(0, jsx_runtime_1.jsxs)("div", Object.assign({ className: ConfigureComponent_module_scss_1.default.conInp_head }, { children: [(0, jsx_runtime_1.jsx)("p", Object.assign({ className: ConfigureComponent_module_scss_1.default.title }, { children: component.title })), (0, jsx_runtime_1.jsx)("div", Object.assign({ onClick: onClickDelete, className: trashClass }, { children: "\uD83D\uDDD1\uFE0F" })), (0, jsx_runtime_1.jsx)("div", Object.assign({ onClick: onClickClose, className: ConfigureComponent_module_scss_1.default.cross }, { children: "\u274C" }))] })), (0, jsx_runtime_1.jsx)("ul", Object.assign({ className: ConfigureComponent_module_scss_1.default.conInp_list }, { children: Object.keys(component.options).map(optionKey) }))] })));
}
exports.ConfigureComponent = ConfigureComponent;
//# sourceMappingURL=ConfigureComponent.js.map