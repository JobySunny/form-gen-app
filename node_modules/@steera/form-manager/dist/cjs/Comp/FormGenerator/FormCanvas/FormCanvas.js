"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormCanvas = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const Store_1 = require("../Store");
const StoreProvider_1 = require("../StoreProvider");
const Comp_interface_1 = require("../../Comp.interface");
const RenderComponents_1 = require("../RenderComponents");
const FormCanvas_module_scss_1 = __importDefault(require("./FormCanvas.module.scss"));
function FormCanvas(props) {
    const template = (0, StoreProvider_1.useAppSelector)(Store_1.Selector.getTemplate);
    const isPreview = (0, StoreProvider_1.useAppSelector)(Store_1.Selector.getIsPreview);
    const renderAddNew = (c) => {
        return isPreview ? null : ((0, jsx_runtime_1.jsx)(RenderComponents_1.AddNew, { title: c.title, path: c.path, pathId: c.pathId }, c.path));
    };
    const renderBox = (c) => ((0, jsx_runtime_1.jsx)(RenderComponents_1.Box, Object.assign({ path: c.path, title: c.title, pathId: c.pathId, options: c.options }, { children: c.children.map(renderTemplateComponent) }), c.path));
    const renderEmailBox = (c) => ((0, jsx_runtime_1.jsx)(RenderComponents_1.EmailBox, { path: c.path, title: c.title, pathId: c.pathId, options: c.options }, c.path));
    const renderTextBox = (c) => ((0, jsx_runtime_1.jsx)(RenderComponents_1.TextBox, { path: c.path, title: c.title, pathId: c.pathId, options: c.options }, c.path));
    const renderPasswordBox = (c) => ((0, jsx_runtime_1.jsx)(RenderComponents_1.PasswordBox, { path: c.path, title: c.title, pathId: c.pathId, options: c.options }, c.path));
    const renderNumberBox = (c) => ((0, jsx_runtime_1.jsx)(RenderComponents_1.NumberBox, { path: c.path, title: c.title, pathId: c.pathId, options: c.options }, c.path));
    const renderDateBox = (c) => ((0, jsx_runtime_1.jsx)(RenderComponents_1.DateBox, { path: c.path, title: c.title, pathId: c.pathId, options: c.options }, c.path));
    const renderRadioBox = (c) => ((0, jsx_runtime_1.jsx)(RenderComponents_1.RadioBox, { path: c.path, title: c.title, pathId: c.pathId, options: c.options }, c.path));
    const renderCheckBox = (c) => ((0, jsx_runtime_1.jsx)(RenderComponents_1.CheckBox, { path: c.path, title: c.title, pathId: c.pathId, options: c.options }, c.path));
    const renderSelectBox = (c) => ((0, jsx_runtime_1.jsx)(RenderComponents_1.SelectBox, { path: c.path, title: c.title, pathId: c.pathId, options: c.options }, c.path));
    const renderFieldset = (c) => ((0, jsx_runtime_1.jsx)(RenderComponents_1.Fieldset, Object.assign({ path: c.path, title: c.title, pathId: c.pathId, options: c.options }, { children: c.children.map(renderTemplateComponent) }), c.path));
    const renderTitle = (c) => ((0, jsx_runtime_1.jsx)(RenderComponents_1.Title, { path: c.path, title: c.title, pathId: c.pathId, options: c.options }, c.path));
    const renderTemplateComponent = (c) => {
        switch (c.pathId) {
            case Comp_interface_1.ComponentPath.box:
                return renderBox(c);
            case Comp_interface_1.ComponentPath.addnew:
                return renderAddNew(c);
            case Comp_interface_1.ComponentPath.emailbox:
                return renderEmailBox(c);
            case Comp_interface_1.ComponentPath.textbox:
                return renderTextBox(c);
            case Comp_interface_1.ComponentPath.passwordbox:
                return renderPasswordBox(c);
            case Comp_interface_1.ComponentPath.numberbox:
                return renderNumberBox(c);
            case Comp_interface_1.ComponentPath.datebox:
                return renderDateBox(c);
            case Comp_interface_1.ComponentPath.radiobox:
                return renderRadioBox(c);
            case Comp_interface_1.ComponentPath.checkbox:
                return renderCheckBox(c);
            case Comp_interface_1.ComponentPath.selectbox:
                return renderSelectBox(c);
            case Comp_interface_1.ComponentPath.fieldset:
                return renderFieldset(c);
            case Comp_interface_1.ComponentPath.title:
                return renderTitle(c);
            default:
                return null;
        }
    };
    return ((0, jsx_runtime_1.jsx)("div", Object.assign({ className: FormCanvas_module_scss_1.default.card }, { children: (0, jsx_runtime_1.jsx)("div", Object.assign({ className: FormCanvas_module_scss_1.default.canvas }, { children: template.map(renderTemplateComponent) })) })));
}
exports.FormCanvas = FormCanvas;
//# sourceMappingURL=FormCanvas.js.map