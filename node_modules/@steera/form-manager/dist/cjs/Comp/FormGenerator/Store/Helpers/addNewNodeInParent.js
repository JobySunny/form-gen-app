"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addNewNodeInParent = void 0;
const pathUtils_1 = require("../../../../Utils/pathUtils");
const Comp_config_1 = require("../../../Comp.config");
const Comp_interface_1 = require("../../../Comp.interface");
// list of components that need ComponentPath.addnew as child
const NEED_ADD_NEW_CHILD = [Comp_interface_1.ComponentPath.box, Comp_interface_1.ComponentPath.fieldset];
function addNewNodeInParent(parent, pathId) {
    const index = parent.children.findIndex((child) => child.pathId === Comp_interface_1.ComponentPath.addnew);
    if (index > 0 || index === 0) {
        parent.children[index] = Object.assign(Object.assign(Object.assign({}, parent.children[index]), Comp_config_1.ComponentConfig[pathId]), { path: pathUtils_1.Path.addNodeToPath(parent.path, pathUtils_1.Path.makePathNode(pathId, index)) });
    }
    /*
      If pathId is of newly added Component
      is ComponentPath.box | ComponentPath.fieldset
      need to add Component.addnew as initial child
    */
    if (NEED_ADD_NEW_CHILD.includes(parent.children[index].pathId)) {
        parent.children[index].children.push(Object.assign(Object.assign({}, Comp_config_1.ComponentConfig.addnew), { children: [], path: pathUtils_1.Path.addNodeToPath(parent.children[index].path, pathUtils_1.Path.makePathNode(Comp_config_1.ComponentConfig.addnew.pathId, parent.children[index].children.length)) }));
    }
    /*
      If parent is of newly added Component
      is ComponentPath.box | ComponentPath.fieldset
      need to add Component.addnew as final child
    */
    if (NEED_ADD_NEW_CHILD.includes(parent.pathId)) {
        parent.children.push(Object.assign(Object.assign({}, Comp_config_1.ComponentConfig.addnew), { children: [], path: pathUtils_1.Path.addNodeToPath(parent.path, pathUtils_1.Path.makePathNode(Comp_config_1.ComponentConfig.addnew.pathId, parent.children.length)) }));
    }
}
exports.addNewNodeInParent = addNewNodeInParent;
//# sourceMappingURL=addNewNodeInParent.js.map