"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckBox = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const CheckBox_1 = require("../../../../Components/CheckBox");
const StoreProvider_1 = require("../../StoreProvider");
const Store_1 = require("../../Store");
const CheckBox_module_scss_1 = __importDefault(require("./CheckBox.module.scss"));
function CheckBox(props) {
    const dispatch = (0, StoreProvider_1.useAppDispatch)();
    const isPreview = (0, StoreProvider_1.useAppSelector)(Store_1.Selector.getIsPreview);
    const selectedPath = (0, StoreProvider_1.useAppSelector)(Store_1.Selector.getSelectedNodePath);
    const className = `${props.className} ${CheckBox_module_scss_1.default.viewOnly}`;
    const onClick = (e) => {
        e.stopPropagation();
        dispatch(Store_1.Action.selectComponent(props.path));
    };
    const wrapClass = `${CheckBox_module_scss_1.default.opt} ${props.path === selectedPath ? CheckBox_module_scss_1.default.selected : ''}`;
    const component = ((0, jsx_runtime_1.jsx)(CheckBox_1.CheckBox, { id: props.id, label: props.label, name: props.name, className: className, required: props.required, value: props.value, invalidInputMessage: props.invalidInputMessage, isSubmitted: props.isSubmitted, disabled: props.disabled, checked: props.checked }));
    if (isPreview) {
        return component;
    }
    else {
        return ((0, jsx_runtime_1.jsx)("div", Object.assign({ className: wrapClass, onClick: onClick }, { children: component })));
    }
}
exports.CheckBox = CheckBox;
//# sourceMappingURL=CheckBox.js.map