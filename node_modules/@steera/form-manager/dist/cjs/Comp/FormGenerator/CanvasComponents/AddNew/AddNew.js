"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddNew = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importDefault(require("react"));
const ComponentOption_1 = require("../../ChooseComponent/ComponentOption/ComponentOption");
const StoreProvider_1 = require("../../StoreProvider");
const Store_actions_1 = require("../../Store/Store.actions");
const AddNew_module_scss_1 = __importDefault(require("./AddNew.module.scss"));
function AddNew(props) {
    const dispatch = (0, StoreProvider_1.useAppDispatch)();
    const [over, s] = react_1.default.useState(false);
    const setOver = (boolValue) => () => {
        s(boolValue);
    };
    const onDrop = (event) => {
        const pathId = event.dataTransfer.getData(ComponentOption_1.DD_KEY);
        setOver(false)();
        dispatch((0, Store_actions_1.addToCanvas)({ pathId, placePath: props.path }));
    };
    const onDragOver = (e) => {
        e.preventDefault();
    };
    const getClassName = () => `${AddNew_module_scss_1.default.addnew} ${over ? AddNew_module_scss_1.default.dragging : ''}`;
    return ((0, jsx_runtime_1.jsx)("div", Object.assign({ onDrop: onDrop, className: getClassName(), "aria-label": props.path, onDragOver: onDragOver, onDragEnter: setOver(true), onDragLeave: setOver(false) }, { children: "+ Drop Here" })));
}
exports.AddNew = AddNew;
//# sourceMappingURL=AddNew.js.map