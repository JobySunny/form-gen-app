/**
 * All uqique PathId for components
 */
export declare enum ComponentPath {
    box = "box",
    addnew = "addnew",
    textbox = "textbox",
    datebox = "datebox",
    fieldset = "fieldset",
    emailbox = "emailbox",
    radiobox = "radiobox",
    checkbox = "checkbox",
    selectbox = "selectbox",
    numberbox = "numberbox",
    passwordbox = "passwordbox",
    title = "title"
}
/**
 * Type of a Single Option in Component Config
 */
export interface ComponentOptionItemType {
    title: string;
    input: {
        [key: string]: any;
    };
    attribute: {
        [key: string]: any;
    };
}
/**
 * Type of a Single Component
 */
export interface ComponentType {
    /**
     * PathId for Component( Unique for Component)
     */
    pathId: ComponentPath;
    /**
     * Title of Component
     */
    title: string;
    /**
     * Options associated with a Component
     */
    options: Record<string, ComponentOptionItemType>;
}
/**
 * Type of a Single Node in Form Template String
 */
export interface TemplateNodeType extends ComponentType {
    /**
     * Path string to uniquely identify the component in Template
     */
    path: string;
    /**
     * child elements to render inside current node
     */
    children: Array<TemplateNodeType>;
}
//# sourceMappingURL=Comp.interface.d.ts.map