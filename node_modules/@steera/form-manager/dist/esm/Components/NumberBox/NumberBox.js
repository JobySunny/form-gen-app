import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React from 'react';
import { Number } from '../Number';
import { Label } from '../Label';
import { Hint } from '../Hint';
import { getOnKey, KEY } from '../../Utils/commonUtils';
import cn from './NumberBox.module.scss';
export function NumberBox(props) {
    const [valid, setValid] = React.useState(true);
    const onEnterKey = getOnKey(KEY.ENTER);
    const getClassName = (ele = '') => `${cn[`nbox${ele}`]} ${props.className}${ele}`;
    const onKeyUp = (e) => {
        if (props.onKeyUp)
            props.onKeyUp(e);
        onEnterKey(() => {
            if (props.onEnterKey)
                props.onEnterKey(e);
        }, e);
    };
    const onBlur = (e) => {
        const { validity } = e.target;
        setValid(validity.valid);
        if (props.onBlur)
            props.onBlur(e);
    };
    const getHintShow = () => {
        if (props.isSubmitted) {
            return !valid;
        }
        else
            return false;
    };
    return (_jsxs("div", Object.assign({ className: getClassName() }, { children: [_jsx(Label, { for: props.id, text: props.label, required: props.required, className: getClassName('_label') }), _jsx(Number, { id: props.id, name: props.name, value: props.value, defaultValue: props.defaultValue, min: props.min, max: props.max, className: getClassName('_input'), disabled: props.disabled, required: props.required, onChange: props.onChange, onBlur: onBlur, onFocus: props.onFocus, onKeyUp: onKeyUp, placeholder: props.placeholder }), _jsx(Hint, { show: getHintShow(), message: props.invalidInputMessage, className: getClassName('_hint') })] })));
}
//# sourceMappingURL=NumberBox.js.map