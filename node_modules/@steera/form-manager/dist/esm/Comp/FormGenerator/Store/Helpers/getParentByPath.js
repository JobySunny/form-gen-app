import { Path } from '../../../../Utils/pathUtils';
export function getParentByPath(template, path) {
    const indices = getParentPathIndices(path);
    let parentNode = indices.reduce((templateList, nodeIndex) => {
        if (Array.isArray(templateList)) {
            return templateList[nodeIndex];
        }
        else {
            return templateList.children[nodeIndex];
        }
    }, template);
    return parentNode;
}
function getParentPathIndices(path) {
    const parsedPaths = Path.parseFullPath(path);
    return parsedPaths
        .slice(0, parsedPaths.length - 1)
        .map((n) => typeof n[0] === 'string' ? parseInt(n[0]) : n[0]);
}
//# sourceMappingURL=getParentByPath.js.map