import produce from 'immer';
import { ACTION } from './Store.constants';
import { onDeleteNode, onAddToCanvas, onPropsChange, onTogglePreview, onSelectComponent, onUpdateOptionItem, onCloseConfigSection, onChangeTemplateName, } from './ActionHanlders';
export function Reducer(state, action) {
    const newState = produce(state, (draft) => {
        switch (action.type) {
            case ACTION.PROPS_CHANGE:
                return onPropsChange(draft, action.payload);
            case ACTION.DELETE_NODE:
                return onDeleteNode(draft);
            case ACTION.TOGGLE_PREVIEW:
                return onTogglePreview(draft);
            case ACTION.ADD_TO_CANVAS:
                return onAddToCanvas(draft, action.payload);
            case ACTION.SELECT_COMPONENT:
                return onSelectComponent(draft, action.payload);
            case ACTION.UPDATE_OPTION:
                return onUpdateOptionItem(draft, action.payload);
            case ACTION.CLOSE_SECTION:
                return onCloseConfigSection(draft);
            case ACTION.CHANGE_NAME:
                return onChangeTemplateName(draft, action.payload);
            default:
                return draft;
        }
    });
    stateLogger(state)(action)(newState);
    return newState;
}
const stateLogger = (state) => (action) => (newState) => {
    // eslint-disable-next-line
    console.info({ 'Previous State': state });
    // eslint-disable-next-line
    console.info({ Action: action });
    // eslint-disable-next-line
    console.info({ 'New State': newState });
};
//# sourceMappingURL=Store.js.map