import { TemplateState } from '../Store.interface';
import { TemplateNodeType as NodeType } from '../../../Comp.interface';
import { PathType } from '../../../../Utils/pathUtils';
/**
 * Get the Parent of state.selectedElementPath from state.template
 * @param state Current instance of FormGenerator Applicaiton state;
 * @returns Parent of the current Component in state.selectedElementPath
 */
export declare function getUpdatingParentNode(state: TemplateState): NodeType;
/**
 * Get the TargetComponent with path state.selectedElementPath from state.template
 * @param state Current instance of FormGenerator Applicaiton state;
 * @returns Current Component in state.selectedElementPath
 */
export declare function getUpdatingTargetNode(state: TemplateState): NodeType;
/**
 * Get all indices in a path string;
 * @param path path of a template component
 * @returns indices[]: these could be applied to template[] to get target component
 */
export declare function getPathIndices(path: PathType): number[];
/**
 * Get the Parent & Target Node from state.template
 * @param template state.template that has all component nodes
 * @param indices indices[] to navigate to particular component
 * @returns ParentAndTargetNode
 */
export declare function getParentAndTargetNodes(template: NodeType, indices: number[]): {
    parent: NodeType;
    component: NodeType;
};
//# sourceMappingURL=GetUpdatingNodes.d.ts.map