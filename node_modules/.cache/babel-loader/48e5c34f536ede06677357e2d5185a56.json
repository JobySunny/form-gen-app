{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { INPUT } from '../../../../Utils/constants';\nimport { useAppDispatch } from '../../StoreProvider';\nimport { Action } from '../../Store';\nimport { getThrottle } from '../../../../Utils/commonUtils';\nimport cn from './Input.module.scss';\nexport function Input(props) {\n  const dispatch = useAppDispatch();\n  const throttle = getThrottle('inputChange');\n  const [value, setValue] = React.useState(props.value);\n  React.useEffect(() => {\n    if (props.value !== value) {\n      setValue(props.value);\n    }\n  }, [props.value]);\n\n  const onChange = e => {\n    var _a, _b, _c;\n\n    if (INPUT.DATE === props.type) {\n      setValue((_a = e === null || e === void 0 ? void 0 : e.target) === null || _a === void 0 ? void 0 : _a.value);\n    }\n\n    if (INPUT.NUMBER === props.type) {\n      setValue((_b = e === null || e === void 0 ? void 0 : e.target) === null || _b === void 0 ? void 0 : _b.valueAsNumber);\n    }\n\n    if (INPUT.TEXT === props.type) {\n      setValue((_c = e === null || e === void 0 ? void 0 : e.target) === null || _c === void 0 ? void 0 : _c.value);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.value !== value) {\n      throttle(() => {\n        dispatch(Action.updateOptionItem({\n          name: props.name,\n          value\n        }));\n      });\n    }\n  }, [value]);\n  return _jsx(\"input\", {\n    id: props.id,\n    className: cn.inp,\n    type: props.type,\n    name: props.name,\n    disabled: props.disabled,\n    max: props.max,\n    min: props.min,\n    minLength: props.minLength,\n    maxLength: props.maxLength,\n    value: value,\n    required: props.required,\n    onChange: onChange\n  });\n}","map":{"version":3,"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAAQC,KAAR,QAAoB,6BAApB;AACA,SAAQC,cAAR,QAA6B,qBAA7B;AACA,SAAQC,MAAR,QAAqB,aAArB;AACA,SAAQC,WAAR,QAA0B,+BAA1B;AAEA,OAAOC,EAAP,MAAe,qBAAf;AAEA,OAAM,SAAUC,KAAV,CAAgBC,KAAhB,EAA4B;EAChC,MAAMC,QAAQ,GAAGN,cAAc,EAA/B;EACA,MAAMO,QAAQ,GAAGL,WAAW,CAAC,aAAD,CAA5B;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBX,KAAK,CAACY,QAAN,CAAeL,KAAK,CAACG,KAArB,CAA1B;EAEAV,KAAK,CAACa,SAAN,CAAgB,MAAK;IACnB,IAAIN,KAAK,CAACG,KAAN,KAAgBA,KAApB,EAA2B;MACzBC,QAAQ,CAACJ,KAAK,CAACG,KAAP,CAAR;IACD;EACF,CAJD,EAIG,CAACH,KAAK,CAACG,KAAP,CAJH;;EAMA,MAAMI,QAAQ,GAAgDC,CAAD,IAAM;;;IACjE,IAAId,KAAK,CAACe,IAAN,KAAeT,KAAK,CAACU,IAAzB,EAA+B;MAC7BN,QAAQ,CAAC,OAAC,SAAD,KAAC,WAAD,GAAC,MAAD,IAAC,CAAEO,MAAH,MAAS,IAAT,IAASC,aAAT,GAAS,MAAT,GAASA,GAAET,KAAZ,CAAR;IACD;;IACD,IAAIT,KAAK,CAACmB,MAAN,KAAiBb,KAAK,CAACU,IAA3B,EAAiC;MAC/BN,QAAQ,CAAC,OAAC,SAAD,KAAC,WAAD,GAAC,MAAD,IAAC,CAAEO,MAAH,MAAS,IAAT,IAASG,aAAT,GAAS,MAAT,GAASA,GAAEC,aAAZ,CAAR;IACD;;IACD,IAAIrB,KAAK,CAACsB,IAAN,KAAehB,KAAK,CAACU,IAAzB,EAA+B;MAC7BN,QAAQ,CAAC,OAAC,SAAD,KAAC,WAAD,GAAC,MAAD,IAAC,CAAEO,MAAH,MAAS,IAAT,IAASM,aAAT,GAAS,MAAT,GAASA,GAAEd,KAAZ,CAAR;IACD;EACF,CAVD;;EAYAV,KAAK,CAACa,SAAN,CAAgB,MAAK;IACnB,IAAIN,KAAK,CAACG,KAAN,KAAgBA,KAApB,EAA2B;MACzBD,QAAQ,CAAC,MAAK;QACZD,QAAQ,CAACL,MAAM,CAACsB,gBAAP,CAAwB;UAACC,IAAI,EAAEnB,KAAK,CAACmB,IAAb;UAAmBhB;QAAnB,CAAxB,CAAD,CAAR;MACD,CAFO,CAAR;IAGD;EACF,CAND,EAMG,CAACA,KAAD,CANH;EAQA,OACEiB;IACEC,EAAE,EAAErB,KAAK,CAACqB,EADZ;IAEEC,SAAS,EAAExB,EAAE,CAACyB,GAFhB;IAGEb,IAAI,EAAEV,KAAK,CAACU,IAHd;IAIES,IAAI,EAAEnB,KAAK,CAACmB,IAJd;IAKEK,QAAQ,EAAExB,KAAK,CAACwB,QALlB;IAMEC,GAAG,EAAEzB,KAAK,CAACyB,GANb;IAOEC,GAAG,EAAE1B,KAAK,CAAC0B,GAPb;IAQEC,SAAS,EAAE3B,KAAK,CAAC2B,SARnB;IASEC,SAAS,EAAE5B,KAAK,CAAC4B,SATnB;IAUEzB,KAAK,EAAEA,KAVT;IAWE0B,QAAQ,EAAE7B,KAAK,CAAC6B,QAXlB;IAYEtB,QAAQ,EAAEA;EAZZ,EADF;AAgBD","names":["React","INPUT","useAppDispatch","Action","getThrottle","cn","Input","props","dispatch","throttle","value","setValue","useState","useEffect","onChange","e","DATE","type","target","_a","NUMBER","_b","valueAsNumber","TEXT","_c","updateOptionItem","name","_jsx","id","className","inp","disabled","max","min","minLength","maxLength","required"],"sources":["/home/fact-11/Desktop/formApp/formapp/node_modules/@steera/form-manager/src/Comp/FormGenerator/ConfigureComponent/Input/Input.tsx"],"sourcesContent":["import React from 'react';\nimport {InputProps as Props} from './Input.interface';\n\nimport {INPUT} from '../../../../Utils/constants';\nimport {useAppDispatch} from '../../StoreProvider';\nimport {Action} from '../../Store';\nimport {getThrottle} from '../../../../Utils/commonUtils';\n\nimport cn from './Input.module.scss';\n\nexport function Input(props: Props) {\n  const dispatch = useAppDispatch();\n  const throttle = getThrottle('inputChange');\n  const [value, setValue] = React.useState(props.value);\n\n  React.useEffect(() => {\n    if (props.value !== value) {\n      setValue(props.value);\n    }\n  }, [props.value]);\n\n  const onChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    if (INPUT.DATE === props.type) {\n      setValue(e?.target?.value);\n    }\n    if (INPUT.NUMBER === props.type) {\n      setValue(e?.target?.valueAsNumber);\n    }\n    if (INPUT.TEXT === props.type) {\n      setValue(e?.target?.value);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.value !== value) {\n      throttle(() => {\n        dispatch(Action.updateOptionItem({name: props.name, value}));\n      });\n    }\n  }, [value]);\n\n  return (\n    <input\n      id={props.id}\n      className={cn.inp}\n      type={props.type}\n      name={props.name}\n      disabled={props.disabled}\n      max={props.max}\n      min={props.min}\n      minLength={props.minLength}\n      maxLength={props.maxLength}\n      value={value}\n      required={props.required}\n      onChange={onChange}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}