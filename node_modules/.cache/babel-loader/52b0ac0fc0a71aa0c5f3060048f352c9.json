{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fieldset as F } from '../../../../Components/Fieldset';\nimport { useAppDispatch, useAppSelector } from '../../StoreProvider';\nimport { Action, Selector } from '../../Store';\nimport cn from './Fieldset.module.scss';\nexport function Fieldset(props) {\n  const dispatch = useAppDispatch();\n  const isPreview = useAppSelector(Selector.getIsPreview);\n  const selectedPath = useAppSelector(Selector.getSelectedNodePath);\n  const mainClass = `${props.mainClass} ${isPreview ? '' : selectedPath === props.path ? cn.selected : cn.nopreview}`;\n  const legendClass = `${cn.label} ${props.legendClass}`;\n\n  const onClick = () => {\n    dispatch(Action.selectComponent(props.path));\n  };\n\n  return _jsx(F, Object.assign({\n    legendStyle: props.legendStyle,\n    legendClass: legendClass,\n    mainClass: mainClass,\n    style: props.style,\n    title: props.title,\n    onClick: onClick\n  }, {\n    children: props.children\n  }));\n}","map":{"version":3,"mappings":";AAEA,SAAQA,QAAQ,IAAIC,CAApB,QAA4B,iCAA5B;AAEA,SAAQC,cAAR,EAAwBC,cAAxB,QAA6C,qBAA7C;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,aAA/B;AAEA,OAAOC,EAAP,MAAe,wBAAf;AAEA,OAAM,SAAUN,QAAV,CAAmBO,KAAnB,EAA+B;EACnC,MAAMC,QAAQ,GAAGN,cAAc,EAA/B;EAEA,MAAMO,SAAS,GAAGN,cAAc,CAACE,QAAQ,CAACK,YAAV,CAAhC;EAEA,MAAMC,YAAY,GAAGR,cAAc,CAACE,QAAQ,CAACO,mBAAV,CAAnC;EAEA,MAAMC,SAAS,GAAG,GAAGN,KAAK,CAACM,SAAS,IAClCJ,SAAS,GAAG,EAAH,GAAQE,YAAY,KAAKJ,KAAK,CAACO,IAAvB,GAA8BR,EAAE,CAACS,QAAjC,GAA4CT,EAAE,CAACU,SAClE,EAFA;EAIA,MAAMC,WAAW,GAAG,GAAGX,EAAE,CAACY,KAAK,IAAIX,KAAK,CAACU,WAAW,EAApD;;EAEA,MAAME,OAAO,GAAG,MAAK;IACnBX,QAAQ,CAACJ,MAAM,CAACgB,eAAP,CAAuBb,KAAK,CAACO,IAA7B,CAAD,CAAR;EACD,CAFD;;EAIA,OACEO,KAACpB,CAAD,EAAEqB;IACAC,WAAW,EAAEhB,KAAK,CAACgB,WADnB;IAEAN,WAAW,EAAEA,WAFb;IAGAJ,SAAS,EAAEA,SAHX;IAIAW,KAAK,EAAEjB,KAAK,CAACiB,KAJb;IAKAC,KAAK,EAAElB,KAAK,CAACkB,KALb;IAMAN,OAAO,EAAEA;EANT,GAMgB;IAAAO,UACfnB,KAAK,CAACmB;EADS,CANhB,CAAF,CADF;AAWD","names":["Fieldset","F","useAppDispatch","useAppSelector","Action","Selector","cn","props","dispatch","isPreview","getIsPreview","selectedPath","getSelectedNodePath","mainClass","path","selected","nopreview","legendClass","label","onClick","selectComponent","_jsx","Object","legendStyle","style","title","children"],"sources":["/home/fact-11/Desktop/formApp/formapp/node_modules/@steera/form-manager/src/Comp/FormGenerator/CanvasComponents/Fieldset/Fieldset.tsx"],"sourcesContent":["import React from 'react';\nimport {FieldsetProps as Props} from './Fieldset.interface';\nimport {Fieldset as F} from '../../../../Components/Fieldset';\n\nimport {useAppDispatch, useAppSelector} from '../../StoreProvider';\nimport {Action, Selector} from '../../Store';\n\nimport cn from './Fieldset.module.scss';\n\nexport function Fieldset(props: Props) {\n  const dispatch = useAppDispatch();\n\n  const isPreview = useAppSelector(Selector.getIsPreview);\n\n  const selectedPath = useAppSelector(Selector.getSelectedNodePath);\n\n  const mainClass = `${props.mainClass} ${\n    isPreview ? '' : selectedPath === props.path ? cn.selected : cn.nopreview\n  }`;\n\n  const legendClass = `${cn.label} ${props.legendClass}`;\n\n  const onClick = () => {\n    dispatch(Action.selectComponent(props.path));\n  };\n\n  return (\n    <F\n      legendStyle={props.legendStyle}\n      legendClass={legendClass}\n      mainClass={mainClass}\n      style={props.style}\n      title={props.title}\n      onClick={onClick}>\n      {props.children}\n    </F>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}