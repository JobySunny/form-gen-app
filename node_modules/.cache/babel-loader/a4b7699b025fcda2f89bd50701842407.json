{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { RadioBox as RB } from '../../../../Components/RadioBox';\nimport { useAppDispatch, useAppSelector } from '../../StoreProvider';\nimport { Action, Selector } from '../../Store';\nimport cn from './RadioBox.module.scss';\nexport function RadioBox(props) {\n  const dispatch = useAppDispatch();\n  const isPreview = useAppSelector(Selector.getIsPreview);\n  const selectedPath = useAppSelector(Selector.getSelectedNodePath);\n  const className = `${props.className} ${cn.viewOnly}`;\n\n  const onClick = e => {\n    e.stopPropagation();\n    dispatch(Action.selectComponent(props.path));\n  };\n\n  const wrapClass = `${cn.opt} ${props.path === selectedPath ? cn.selected : ''}`;\n\n  const component = _jsx(RB, {\n    id: props.id,\n    label: props.label,\n    name: props.name,\n    className: className,\n    required: props.required,\n    invalidInputMessage: props.invalidInputMessage,\n    isSubmitted: props.isSubmitted,\n    disabled: props.disabled,\n    checked: props.checked,\n    value: props.value\n  });\n\n  if (isPreview) {\n    return component;\n  } else {\n    return _jsx(\"div\", Object.assign({\n      className: wrapClass,\n      onClick: onClick\n    }, {\n      children: component\n    }));\n  }\n}","map":{"version":3,"mappings":";AAGA,SAAQA,QAAQ,IAAIC,EAApB,QAA6B,iCAA7B;AACA,SAAQC,cAAR,EAAwBC,cAAxB,QAA6C,qBAA7C;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,aAA/B;AAEA,OAAOC,EAAP,MAAe,wBAAf;AAEA,OAAM,SAAUN,QAAV,CAAmBO,KAAnB,EAA+B;EACnC,MAAMC,QAAQ,GAAGN,cAAc,EAA/B;EAEA,MAAMO,SAAS,GAAGN,cAAc,CAACE,QAAQ,CAACK,YAAV,CAAhC;EAEA,MAAMC,YAAY,GAAGR,cAAc,CAACE,QAAQ,CAACO,mBAAV,CAAnC;EAEA,MAAMC,SAAS,GAAG,GAAGN,KAAK,CAACM,SAAS,IAAIP,EAAE,CAACQ,QAAQ,EAAnD;;EAEA,MAAMC,OAAO,GAAIC,CAAD,IAAwB;IACtCA,CAAC,CAACC,eAAF;IACAT,QAAQ,CAACJ,MAAM,CAACc,eAAP,CAAuBX,KAAK,CAACY,IAA7B,CAAD,CAAR;EACD,CAHD;;EAKA,MAAMC,SAAS,GAAG,GAAGd,EAAE,CAACe,GAAG,IACzBd,KAAK,CAACY,IAAN,KAAeR,YAAf,GAA8BL,EAAE,CAACgB,QAAjC,GAA4C,EAC9C,EAFA;;EAIA,MAAMC,SAAS,GACbC,KAACvB,EAAD,EAAG;IACDwB,EAAE,EAAElB,KAAK,CAACkB,EADT;IAEDC,KAAK,EAAEnB,KAAK,CAACmB,KAFZ;IAGDC,IAAI,EAAEpB,KAAK,CAACoB,IAHX;IAIDd,SAAS,EAAEA,SAJV;IAKDe,QAAQ,EAAErB,KAAK,CAACqB,QALf;IAMDC,mBAAmB,EAAEtB,KAAK,CAACsB,mBAN1B;IAODC,WAAW,EAAEvB,KAAK,CAACuB,WAPlB;IAQDC,QAAQ,EAAExB,KAAK,CAACwB,QARf;IASDC,OAAO,EAAEzB,KAAK,CAACyB,OATd;IAUDC,KAAK,EAAE1B,KAAK,CAAC0B;EAVZ,CAAH,CADF;;EAeA,IAAIxB,SAAJ,EAAe;IACb,OAAOc,SAAP;EACD,CAFD,MAEO;IACL,OACEC;MAAKX,SAAS,EAAEO,SAAhB;MAA2BL,OAAO,EAAEA;IAApC,GAA2C;MAAAmB,UACxCX;IADwC,CAA3C,EADF;EAKD;AACF","names":["RadioBox","RB","useAppDispatch","useAppSelector","Action","Selector","cn","props","dispatch","isPreview","getIsPreview","selectedPath","getSelectedNodePath","className","viewOnly","onClick","e","stopPropagation","selectComponent","path","wrapClass","opt","selected","component","_jsx","id","label","name","required","invalidInputMessage","isSubmitted","disabled","checked","value","children"],"sources":["/home/fact-11/Desktop/formApp/formapp/node_modules/@steera/form-manager/src/Comp/FormGenerator/CanvasComponents/RadioBox/RadioBox.tsx"],"sourcesContent":["import React from 'react';\nimport {RadioBoxProps as Props} from './RadioBox.interface';\n\nimport {RadioBox as RB} from '../../../../Components/RadioBox';\nimport {useAppDispatch, useAppSelector} from '../../StoreProvider';\nimport {Action, Selector} from '../../Store';\n\nimport cn from './RadioBox.module.scss';\n\nexport function RadioBox(props: Props) {\n  const dispatch = useAppDispatch();\n\n  const isPreview = useAppSelector(Selector.getIsPreview);\n\n  const selectedPath = useAppSelector(Selector.getSelectedNodePath);\n\n  const className = `${props.className} ${cn.viewOnly}`;\n\n  const onClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    dispatch(Action.selectComponent(props.path));\n  };\n\n  const wrapClass = `${cn.opt} ${\n    props.path === selectedPath ? cn.selected : ''\n  }`;\n\n  const component = (\n    <RB\n      id={props.id}\n      label={props.label}\n      name={props.name}\n      className={className}\n      required={props.required}\n      invalidInputMessage={props.invalidInputMessage}\n      isSubmitted={props.isSubmitted}\n      disabled={props.disabled}\n      checked={props.checked}\n      value={props.value}\n    />\n  );\n\n  if (isPreview) {\n    return component;\n  } else {\n    return (\n      <div className={wrapClass} onClick={onClick}>\n        {component}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}