{"ast":null,"code":"import { TemplateComponent } from './Store.constants';\nimport { Path } from '../../../Utils/pathUtils';\nconst RootElementPath = Path.makePathNode(TemplateComponent.box.pathId, 0);\nconst RootChildPath = Path.addNodeToPath(RootElementPath, Path.makePathNode(TemplateComponent.addnew.pathId, 0));\nconst starterElement = {\n  title: TemplateComponent.box.title,\n  path: RootElementPath,\n  pathId: TemplateComponent.box.pathId,\n  options: TemplateComponent.box.options,\n  children: [{\n    title: TemplateComponent.addnew.title,\n    path: RootChildPath,\n    pathId: TemplateComponent.addnew.pathId,\n    options: TemplateComponent.addnew.options,\n    children: []\n  }]\n};\nexport const initialState = {\n  isPreview: false,\n  templateId: '',\n  templateName: '',\n  selectedNodePath: '',\n  template: [starterElement]\n};\n/**\n * An template-canvas at all conditions should have a FLEX_COLUMN\n * component as the starter. This ensure a consistant starting point\n * for the template object\n *\n */","map":{"version":3,"mappings":"AACA,SAAQA,iBAAR,QAAgC,mBAAhC;AACA,SAAQC,IAAR,QAAmB,0BAAnB;AAGA,MAAMC,eAAe,GAAGD,IAAI,CAACE,YAAL,CAAkBH,iBAAiB,CAACI,GAAlB,CAAsBC,MAAxC,EAAgD,CAAhD,CAAxB;AACA,MAAMC,aAAa,GAAGL,IAAI,CAACM,aAAL,CACpBL,eADoB,EAEpBD,IAAI,CAACE,YAAL,CAAkBH,iBAAiB,CAACQ,MAAlB,CAAyBH,MAA3C,EAAmD,CAAnD,CAFoB,CAAtB;AAKA,MAAMI,cAAc,GAAqB;EACvCC,KAAK,EAAEV,iBAAiB,CAACI,GAAlB,CAAsBM,KADU;EAEvCC,IAAI,EAAET,eAFiC;EAGvCG,MAAM,EAAEL,iBAAiB,CAACI,GAAlB,CAAsBC,MAHS;EAIvCO,OAAO,EAAEZ,iBAAiB,CAACI,GAAlB,CAAsBQ,OAJQ;EAKvCC,QAAQ,EAAE,CACR;IACEH,KAAK,EAAEV,iBAAiB,CAACQ,MAAlB,CAAyBE,KADlC;IAEEC,IAAI,EAAEL,aAFR;IAGED,MAAM,EAAEL,iBAAiB,CAACQ,MAAlB,CAAyBH,MAHnC;IAIEO,OAAO,EAAEZ,iBAAiB,CAACQ,MAAlB,CAAyBI,OAJpC;IAKEC,QAAQ,EAAE;EALZ,CADQ;AAL6B,CAAzC;AAgBA,OAAO,MAAMC,YAAY,GAAkB;EACzCC,SAAS,EAAE,KAD8B;EAEzCC,UAAU,EAAE,EAF6B;EAGzCC,YAAY,EAAE,EAH2B;EAIzCC,gBAAgB,EAAE,EAJuB;EAKzCC,QAAQ,EAAE,CAACV,cAAD;AAL+B,CAApC;AAQP","names":["TemplateComponent","Path","RootElementPath","makePathNode","box","pathId","RootChildPath","addNodeToPath","addnew","starterElement","title","path","options","children","initialState","isPreview","templateId","templateName","selectedNodePath","template"],"sources":["/home/fact-11/Desktop/formApp/formapp/node_modules/@steera/form-manager/src/Comp/FormGenerator/Store/Store.initialstate.ts"],"sourcesContent":["import {TemplateState} from './Store.interface';\nimport {TemplateComponent} from './Store.constants';\nimport {Path} from '../../../Utils/pathUtils';\nimport {TemplateNodeType} from '../../Comp.interface';\n\nconst RootElementPath = Path.makePathNode(TemplateComponent.box.pathId, 0);\nconst RootChildPath = Path.addNodeToPath(\n  RootElementPath,\n  Path.makePathNode(TemplateComponent.addnew.pathId, 0)\n);\n\nconst starterElement: TemplateNodeType = {\n  title: TemplateComponent.box.title,\n  path: RootElementPath,\n  pathId: TemplateComponent.box.pathId,\n  options: TemplateComponent.box.options,\n  children: [\n    {\n      title: TemplateComponent.addnew.title,\n      path: RootChildPath,\n      pathId: TemplateComponent.addnew.pathId,\n      options: TemplateComponent.addnew.options,\n      children: [],\n    },\n  ],\n};\n\nexport const initialState: TemplateState = {\n  isPreview: false,\n  templateId: '',\n  templateName: '',\n  selectedNodePath: '',\n  template: [starterElement],\n};\n\n/**\n * An template-canvas at all conditions should have a FLEX_COLUMN\n * component as the starter. This ensure a consistant starting point\n * for the template object\n *\n */\n"]},"metadata":{},"sourceType":"module"}