{"ast":null,"code":"/**\n * All uqique PathId for components\n */\nexport var ComponentPath;\n\n(function (ComponentPath) {\n  ComponentPath[\"box\"] = \"box\";\n  ComponentPath[\"addnew\"] = \"addnew\";\n  ComponentPath[\"textbox\"] = \"textbox\";\n  ComponentPath[\"datebox\"] = \"datebox\";\n  ComponentPath[\"fieldset\"] = \"fieldset\";\n  ComponentPath[\"emailbox\"] = \"emailbox\";\n  ComponentPath[\"radiobox\"] = \"radiobox\";\n  ComponentPath[\"checkbox\"] = \"checkbox\";\n  ComponentPath[\"selectbox\"] = \"selectbox\";\n  ComponentPath[\"numberbox\"] = \"numberbox\";\n  ComponentPath[\"passwordbox\"] = \"passwordbox\";\n  ComponentPath[\"title\"] = \"title\";\n})(ComponentPath || (ComponentPath = {}));","map":{"version":3,"mappings":"AAAA;;;AAGA,WAAYA,aAAZ;;AAAA,WAAYA,aAAZ,EAAyB;EACvBA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;AACD,CAbD,EAAYA,aAAa,KAAbA,aAAa,MAAzB","names":["ComponentPath"],"sources":["/home/fact-11/Desktop/formApp/formapp/node_modules/@steera/form-manager/src/Comp/Comp.interface.ts"],"sourcesContent":["/**\n * All uqique PathId for components\n */\nexport enum ComponentPath {\n  box = 'box',\n  addnew = 'addnew',\n  textbox = 'textbox',\n  datebox = 'datebox',\n  fieldset = 'fieldset',\n  emailbox = 'emailbox',\n  radiobox = 'radiobox',\n  checkbox = 'checkbox',\n  selectbox = 'selectbox',\n  numberbox = 'numberbox',\n  passwordbox = 'passwordbox',\n  title = 'title',\n}\n\n/**\n * Type of a Single Option in Component Config\n */\nexport interface ComponentOptionItemType {\n  title: string;\n  input: {[key: string]: any};\n  attribute: {[key: string]: any};\n}\n\n/**\n * Type of a Single Component\n */\nexport interface ComponentType {\n  /**\n   * PathId for Component( Unique for Component)\n   */\n  pathId: ComponentPath;\n  /**\n   * Title of Component\n   */\n  title: string;\n  /**\n   * Options associated with a Component\n   */\n  options: Record<string, ComponentOptionItemType>;\n}\n\n/**\n * Type of a Single Node in Form Template String\n */\nexport interface TemplateNodeType extends ComponentType {\n  /**\n   * Path string to uniquely identify the component in Template\n   */\n  path: string;\n  /**\n   * child elements to render inside current node\n   */\n  children: Array<TemplateNodeType>;\n}\n"]},"metadata":{},"sourceType":"module"}