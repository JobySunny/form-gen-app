{"ast":null,"code":"import { Path } from '../../../../Utils/pathUtils';\n/**\n * Accepts a path and adds the pathkey component as the last component in path.\n * @param path Current Path with its last node as xx/{index}-addnew\n * @param pathKey Component Identifier\n * @returns updatedPath ComponentPath\n */\n\nexport function updatePathWithComponent(path, pathKey) {\n  const pathNodes = Path.parseToNodes(path);\n  const edgePathNode = pathNodes[pathNodes.length - 1];\n  const [index] = Path.parseToIndex(edgePathNode);\n  const newPathNode = Path.makePathNode(pathKey, index);\n  const newPathPrefix = Path.mergePathNodes(pathNodes.splice(0, pathNodes.length - 1));\n  return Path.addNodeToPath(newPathPrefix, newPathNode);\n}","map":{"version":3,"mappings":"AAAA,SAAQA,IAAR,QAAsC,6BAAtC;AAEA;;;;;;;AAMA,OAAM,SAAUC,uBAAV,CACJC,IADI,EAEJC,OAFI,EAEY;EAEhB,MAAMC,SAAS,GAAGJ,IAAI,CAACK,YAAL,CAAkBH,IAAlB,CAAlB;EACA,MAAMI,YAAY,GAAGF,SAAS,CAACA,SAAS,CAACG,MAAV,GAAmB,CAApB,CAA9B;EACA,MAAM,CAACC,KAAD,IAAUR,IAAI,CAACS,YAAL,CAAkBH,YAAlB,CAAhB;EACA,MAAMI,WAAW,GAAGV,IAAI,CAACW,YAAL,CAAkBR,OAAlB,EAA2BK,KAA3B,CAApB;EACA,MAAMI,aAAa,GAAGZ,IAAI,CAACa,cAAL,CACpBT,SAAS,CAACU,MAAV,CAAiB,CAAjB,EAAoBV,SAAS,CAACG,MAAV,GAAmB,CAAvC,CADoB,CAAtB;EAGA,OAAOP,IAAI,CAACe,aAAL,CAAmBH,aAAnB,EAAkCF,WAAlC,CAAP;AACD","names":["Path","updatePathWithComponent","path","pathKey","pathNodes","parseToNodes","edgePathNode","length","index","parseToIndex","newPathNode","makePathNode","newPathPrefix","mergePathNodes","splice","addNodeToPath"],"sources":["/home/fact-11/Desktop/formApp/formapp/node_modules/@steera/form-manager/src/Comp/FormGenerator/Store/Helpers/UpdatePathWithComponent.ts"],"sourcesContent":["import {Path, PathKey, PathType} from '../../../../Utils/pathUtils';\n\n/**\n * Accepts a path and adds the pathkey component as the last component in path.\n * @param path Current Path with its last node as xx/{index}-addnew\n * @param pathKey Component Identifier\n * @returns updatedPath ComponentPath\n */\nexport function updatePathWithComponent(\n  path: PathType,\n  pathKey: PathKey\n): PathType {\n  const pathNodes = Path.parseToNodes(path);\n  const edgePathNode = pathNodes[pathNodes.length - 1];\n  const [index] = Path.parseToIndex(edgePathNode);\n  const newPathNode = Path.makePathNode(pathKey, index);\n  const newPathPrefix = Path.mergePathNodes(\n    pathNodes.splice(0, pathNodes.length - 1)\n  );\n  return Path.addNodeToPath(newPathPrefix, newPathNode);\n}\n"]},"metadata":{},"sourceType":"module"}