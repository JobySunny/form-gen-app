{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Focused } from './Focused';\nimport { Normal } from './Normal';\nimport { Loading } from './Loading';\nexport function Icon(props) {\n  const renderContent = () => {\n    if (props.loading) {\n      return _jsx(Loading, {\n        testId: props.testId,\n        className: props.iconClassName\n      });\n    }\n\n    if (props.focus) {\n      return _jsx(Focused, {\n        testId: props.testId,\n        className: props.iconClassName\n      });\n    } else {\n      return _jsx(Normal, {\n        testId: props.testId,\n        className: props.iconClassName\n      });\n    }\n  };\n\n  return _jsx(\"div\", Object.assign({\n    className: props.className\n  }, {\n    children: renderContent()\n  }));\n}","map":{"version":3,"mappings":";AAGA,SAAQA,OAAR,QAAsB,WAAtB;AACA,SAAQC,MAAR,QAAqB,UAArB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AAEA,OAAM,SAAUC,IAAV,CAAeC,KAAf,EAA2B;EAC/B,MAAMC,aAAa,GAAG,MAAkB;IACtC,IAAID,KAAK,CAACE,OAAV,EAAmB;MACjB,OAAOC,KAACL,OAAD,EAAQ;QAACM,MAAM,EAAEJ,KAAK,CAACI,MAAf;QAAuBC,SAAS,EAAEL,KAAK,CAACM;MAAxC,CAAR,CAAP;IACD;;IACD,IAAIN,KAAK,CAACO,KAAV,EAAiB;MACf,OAAOJ,KAACP,OAAD,EAAQ;QAACQ,MAAM,EAAEJ,KAAK,CAACI,MAAf;QAAuBC,SAAS,EAAEL,KAAK,CAACM;MAAxC,CAAR,CAAP;IACD,CAFD,MAEO;MACL,OAAOH,KAACN,MAAD,EAAO;QAACO,MAAM,EAAEJ,KAAK,CAACI,MAAf;QAAuBC,SAAS,EAAEL,KAAK,CAACM;MAAxC,CAAP,CAAP;IACD;EACF,CATD;;EAWA,OAAOH;IAAKE,SAAS,EAAEL,KAAK,CAACK;EAAtB,GAA+B;IAAAG,UAAGP,aAAa;EAAhB,CAA/B,EAAP;AACD","names":["Focused","Normal","Loading","Icon","props","renderContent","loading","_jsx","testId","className","iconClassName","focus","children"],"sources":["/home/fact-11/Desktop/formApp/formapp/node_modules/@steera/form-manager/src/Components/Select/Icon/Icon.tsx"],"sourcesContent":["import * as React from 'react';\nimport {IconProps as Props} from './Icon.interface';\n\nimport {Focused} from './Focused';\nimport {Normal} from './Normal';\nimport {Loading} from './Loading';\n\nexport function Icon(props: Props): JSX.Element {\n  const renderContent = (): JSX.Element => {\n    if (props.loading) {\n      return <Loading testId={props.testId} className={props.iconClassName} />;\n    }\n    if (props.focus) {\n      return <Focused testId={props.testId} className={props.iconClassName} />;\n    } else {\n      return <Normal testId={props.testId} className={props.iconClassName} />;\n    }\n  };\n\n  return <div className={props.className}>{renderContent()}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}