{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { Radio } from '../Radio';\nimport { Label } from '../Label';\nimport { Hint } from '../Hint';\nimport { getOnKey, KEY } from '../../Utils/commonUtils';\nimport cn from './RadioBox.module.scss';\nexport function RadioBox(props) {\n  const [valid, setValid] = React.useState(true);\n  const onEnterKey = getOnKey(KEY.ENTER);\n\n  const getClassName = function () {\n    let ele = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return `${cn[`rbox${ele}`]} ${props.className}${ele}`;\n  };\n\n  const getHintShow = () => {\n    if (props.isSubmitted) {\n      return !valid;\n    } else return false;\n  };\n\n  return _jsxs(\"div\", Object.assign({\n    className: getClassName()\n  }, {\n    children: [_jsx(Radio, {\n      id: props.id,\n      name: props.name,\n      value: props.value,\n      className: getClassName('_input'),\n      disabled: props.disabled,\n      required: props.required,\n      onChange: props.onChange,\n      checked: props.checked\n    }), _jsx(Label, {\n      for: props.id,\n      text: props.label,\n      required: props.required,\n      className: getClassName('_label')\n    }), _jsx(Hint, {\n      show: getHintShow(),\n      message: props.invalidInputMessage,\n      className: getClassName('_hint')\n    })]\n  }));\n}","map":{"version":3,"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAAQC,KAAR,QAAoB,UAApB;AACA,SAAQC,KAAR,QAAoB,UAApB;AACA,SAAQC,IAAR,QAAmB,SAAnB;AACA,SAAQC,QAAR,EAAkBC,GAAlB,QAA4B,yBAA5B;AAEA,OAAOC,EAAP,MAAe,wBAAf;AAEA,OAAM,SAAUC,QAAV,CAAmBC,KAAnB,EAA+B;EACnC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,KAAK,CAACW,QAAN,CAAe,IAAf,CAA1B;EAEA,MAAMC,UAAU,GAAGR,QAAQ,CAACC,GAAG,CAACQ,KAAL,CAA3B;;EAEA,MAAMC,YAAY,GAAG;IAAA,IAACC,GAAD,uEAAO,EAAP;IAAA,OACnB,GAAGT,EAAE,CAAC,OAAOS,GAAG,EAAX,CAAc,IAAIP,KAAK,CAACQ,SAAS,GAAGD,GAAG,EADzB;EAAA,CAArB;;EAGA,MAAME,WAAW,GAAG,MAAc;IAChC,IAAIT,KAAK,CAACU,WAAV,EAAuB;MACrB,OAAO,CAACT,KAAR;IACD,CAFD,MAEO,OAAO,KAAP;EACR,CAJD;;EAMA,OACEU;IAAKH,SAAS,EAAEF,YAAY;EAA5B,GAA8B;IAAAM,WAC5BC,KAACpB,KAAD,EAAM;MACJqB,EAAE,EAAEd,KAAK,CAACc,EADN;MAEJC,IAAI,EAAEf,KAAK,CAACe,IAFR;MAGJC,KAAK,EAAEhB,KAAK,CAACgB,KAHT;MAIJR,SAAS,EAAEF,YAAY,CAAC,QAAD,CAJnB;MAKJW,QAAQ,EAAEjB,KAAK,CAACiB,QALZ;MAMJC,QAAQ,EAAElB,KAAK,CAACkB,QANZ;MAOJC,QAAQ,EAAEnB,KAAK,CAACmB,QAPZ;MAQJC,OAAO,EAAEpB,KAAK,CAACoB;IARX,CAAN,CAD4B,EAW5BP,KAACnB,KAAD,EAAM;MACJ2B,GAAG,EAAErB,KAAK,CAACc,EADP;MAEJQ,IAAI,EAAEtB,KAAK,CAACuB,KAFR;MAGJL,QAAQ,EAAElB,KAAK,CAACkB,QAHZ;MAIJV,SAAS,EAAEF,YAAY,CAAC,QAAD;IAJnB,CAAN,CAX4B,EAiB5BO,KAAClB,IAAD,EAAK;MACH6B,IAAI,EAAEf,WAAW,EADd;MAEHgB,OAAO,EAAEzB,KAAK,CAAC0B,mBAFZ;MAGHlB,SAAS,EAAEF,YAAY,CAAC,OAAD;IAHpB,CAAL,CAjB4B;EAAA,CAA9B,EADF;AAyBD","names":["React","Radio","Label","Hint","getOnKey","KEY","cn","RadioBox","props","valid","setValid","useState","onEnterKey","ENTER","getClassName","ele","className","getHintShow","isSubmitted","_jsxs","children","_jsx","id","name","value","disabled","required","onChange","checked","for","text","label","show","message","invalidInputMessage"],"sources":["/home/fact-11/Desktop/formApp/formapp/node_modules/@steera/form-manager/src/Components/RadioBox/RadioBox.tsx"],"sourcesContent":["import React from 'react';\nimport {RadioBoxProps as Props} from './RadioBox.interface';\n\nimport {Radio} from '../Radio';\nimport {Label} from '../Label';\nimport {Hint} from '../Hint';\nimport {getOnKey, KEY} from '../../Utils/commonUtils';\n\nimport cn from './RadioBox.module.scss';\n\nexport function RadioBox(props: Props) {\n  const [valid, setValid] = React.useState(true);\n\n  const onEnterKey = getOnKey(KEY.ENTER);\n\n  const getClassName = (ele = '') =>\n    `${cn[`rbox${ele}`]} ${props.className}${ele}`;\n\n  const getHintShow = (): boolean => {\n    if (props.isSubmitted) {\n      return !valid;\n    } else return false;\n  };\n\n  return (\n    <div className={getClassName()}>\n      <Radio\n        id={props.id}\n        name={props.name}\n        value={props.value}\n        className={getClassName('_input')}\n        disabled={props.disabled}\n        required={props.required}\n        onChange={props.onChange}\n        checked={props.checked}\n      />\n      <Label\n        for={props.id}\n        text={props.label}\n        required={props.required}\n        className={getClassName('_label')}\n      />\n      <Hint\n        show={getHintShow()}\n        message={props.invalidInputMessage}\n        className={getClassName('_hint')}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}