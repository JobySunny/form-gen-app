{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { useAppDispatch } from '../../StoreProvider';\nimport { Action } from '../../Store';\nimport { getThrottle } from '../../../../Utils/commonUtils';\nimport cn from './Table.module.scss';\nexport function Table(props) {\n  const dispatch = useAppDispatch();\n  const throttle = getThrottle('tableChange');\n  const [options, setOptions] = React.useState([]);\n  let obj = JSON.parse(JSON.stringify(options));\n  React.useEffect(() => {\n    setOptions(props.optionItems);\n  }, [props.optionItems]);\n\n  const onOptionChange = id => e => {\n    setOptions(options => options.map((op, i) => {\n      if (i === id) {\n        return Object.assign(Object.assign({}, op), {\n          [e.target.name]: e.target.value\n        });\n      } else {\n        return op;\n      }\n    }));\n  };\n\n  React.useEffect(() => {\n    throttle(() => {\n      dispatch(Action.updateOptionItem({\n        name: 'options',\n        options\n      }));\n    });\n  }, [options]);\n\n  const addnew = id => e => {\n    obj.splice(id + 1, 0, {\n      label: 'option',\n      value: 'value'\n    });\n    setOptions(obj);\n  };\n\n  const deleterow = id => e => {\n    if (obj.length > 1) {\n      obj.splice(id, 1);\n      setOptions(obj);\n    }\n  };\n\n  const renderOptions = (opt, id) => _jsxs(\"div\", Object.assign({\n    className: cn.tbl_b\n  }, {\n    children: [Object.keys(props.columns).map(key => _jsx(\"input\", {\n      className: cn.tbl_b__col,\n      type: props.columns[key].input.type,\n      name: props.columns[key].input.name,\n      required: props.columns[key].input.required,\n      defaultValue: opt[key],\n      onBlur: onOptionChange(id)\n    }, opt[key])), _jsx(\"div\", Object.assign({\n      className: cn.tbl_b__col,\n      onClick: deleterow(id)\n    }, {\n      children: \"\\uD83D\\uDDD1\\uFE0F\"\n    }), 'trash'), _jsx(\"div\", Object.assign({\n      className: cn.tbl_b__col,\n      onClick: addnew(id)\n    }, {\n      children: \"\\u2795\"\n    }), 'addnew')]\n  }), id);\n\n  const headerColumns = col => _jsx(\"div\", Object.assign({\n    className: cn.tbl_h__col\n  }, {\n    children: props.columns[col].title\n  }), col);\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(\"p\", Object.assign({\n      className: cn.title\n    }, {\n      children: props.title\n    })), _jsxs(\"div\", Object.assign({\n      className: cn.tbl\n    }, {\n      children: [_jsxs(\"div\", Object.assign({\n        className: cn.tbl_h\n      }, {\n        children: [Object.keys(props.columns).map(headerColumns), _jsx(\"div\", Object.assign({\n          className: cn.tbl_h__col\n        }, {\n          children: \"Delete\"\n        }), 'trash'), _jsx(\"div\", Object.assign({\n          className: cn.tbl_h__col\n        }, {\n          children: \"Add New\"\n        }), 'addnew')]\n      })), options.map(renderOptions)]\n    }))]\n  });\n}","map":{"version":3,"mappings":"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","names":["React","useAppDispatch","Action","getThrottle","cn","Table","props","dispatch","throttle","options","setOptions","useState","obj","JSON","parse","stringify","useEffect","optionItems","onOptionChange","id","e","map","op","i","target","name","value","updateOptionItem","addnew","splice","label","deleterow","length","renderOptions","opt","_jsxs","className","tbl_b","children","Object","keys","columns","key","_jsx","tbl_b__col","type","input","required","defaultValue","onBlur","onClick","headerColumns","col","tbl_h__col","title","tbl","tbl_h"],"sources":["/home/fact-11/Desktop/formApp/formapp/node_modules/@steera/form-manager/src/Comp/FormGenerator/ConfigureComponent/Table/Table.tsx"],"sourcesContent":["import React from 'react';\nimport {OptItem, TableProps as Props} from './Table.interface';\nimport {useAppDispatch} from '../../StoreProvider';\nimport {Action} from '../../Store';\nimport {getThrottle} from '../../../../Utils/commonUtils';\n\nimport cn from './Table.module.scss';\n\nexport function Table(props: Props) {\n  const dispatch = useAppDispatch();\n  const throttle = getThrottle('tableChange');\n  const [options, setOptions] = React.useState<Props['optionItems']>([]);\n  let obj = JSON.parse(JSON.stringify(options));\n\n  React.useEffect(() => {\n    setOptions(props.optionItems);\n  }, [props.optionItems]);\n\n  const onOptionChange =\n    (id: number): React.ChangeEventHandler<HTMLInputElement> =>\n    (e) => {\n      setOptions((options) =>\n        options.map((op, i) => {\n          if (i === id) {\n            return {...op, [e.target.name]: e.target.value};\n          } else {\n            return op;\n          }\n        })\n      );\n    };\n\n  React.useEffect(() => {\n    throttle(() => {\n      dispatch(Action.updateOptionItem({name: 'options', options}));\n    });\n  }, [options]);\n\n  const addnew =\n    (id: number): React.MouseEventHandler<HTMLInputElement> =>\n    (e) => {\n      obj.splice(id + 1, 0, {label: 'option', value: 'value'});\n      setOptions(obj);\n    };\n\n  const deleterow =\n    (id: number): React.MouseEventHandler<HTMLInputElement> =>\n    (e) => {\n      if (obj.length > 1) {\n        obj.splice(id, 1);\n        setOptions(obj);\n      }\n    };\n\n  const renderOptions = (opt: OptItem, id: number) => (\n    <div className={cn.tbl_b} key={id}>\n      {Object.keys(props.columns).map((key: string) => (\n        <input\n          key={opt[key]}\n          className={cn.tbl_b__col}\n          type={props.columns[key].input.type as string}\n          name={props.columns[key].input.name as string}\n          required={props.columns[key].input.required as boolean}\n          defaultValue={opt[key]}\n          onBlur={onOptionChange(id)}\n        />\n      ))}\n      <div key='trash' className={cn.tbl_b__col} onClick={deleterow(id)}>\n        üóëÔ∏è\n      </div>\n      <div key='addnew' className={cn.tbl_b__col} onClick={addnew(id)}>\n        ‚ûï\n      </div>\n    </div>\n  );\n\n  const headerColumns = (col: string) => (\n    <div key={col} className={cn.tbl_h__col}>\n      {props.columns[col].title}\n    </div>\n  );\n\n  return (\n    <>\n      <p className={cn.title}>{props.title}</p>\n      <div className={cn.tbl}>\n        <div className={cn.tbl_h}>\n          {Object.keys(props.columns).map(headerColumns)}\n          <div key='trash' className={cn.tbl_h__col}>\n            Delete\n          </div>\n          <div key='addnew' className={cn.tbl_h__col}>\n            Add New\n          </div>\n        </div>\n        {options.map(renderOptions)}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}