{"ast":null,"code":"import { Path } from '../../../../Utils/pathUtils';\nimport { ComponentConfig } from '../../../Comp.config';\nimport { ComponentPath } from '../../../Comp.interface'; // list of components that need ComponentPath.addnew as child\n\nconst NEED_ADD_NEW_CHILD = [ComponentPath.box, ComponentPath.fieldset];\nexport function addNewNodeInParent(parent, pathId) {\n  const index = parent.children.findIndex(child => child.pathId === ComponentPath.addnew);\n\n  if (index > 0 || index === 0) {\n    parent.children[index] = Object.assign(Object.assign(Object.assign({}, parent.children[index]), ComponentConfig[pathId]), {\n      path: Path.addNodeToPath(parent.path, Path.makePathNode(pathId, index))\n    });\n  }\n  /*\n    If pathId is of newly added Component\n    is ComponentPath.box | ComponentPath.fieldset\n    need to add Component.addnew as initial child\n  */\n\n\n  if (NEED_ADD_NEW_CHILD.includes(parent.children[index].pathId)) {\n    parent.children[index].children.push(Object.assign(Object.assign({}, ComponentConfig.addnew), {\n      children: [],\n      path: Path.addNodeToPath(parent.children[index].path, Path.makePathNode(ComponentConfig.addnew.pathId, parent.children[index].children.length))\n    }));\n  }\n  /*\n    If parent is of newly added Component\n    is ComponentPath.box | ComponentPath.fieldset\n    need to add Component.addnew as final child\n  */\n\n\n  if (NEED_ADD_NEW_CHILD.includes(parent.pathId)) {\n    parent.children.push(Object.assign(Object.assign({}, ComponentConfig.addnew), {\n      children: [],\n      path: Path.addNodeToPath(parent.path, Path.makePathNode(ComponentConfig.addnew.pathId, parent.children.length))\n    }));\n  }\n}","map":{"version":3,"mappings":"AAAA,SAAQA,IAAR,QAAmB,6BAAnB;AACA,SAAQC,eAAR,QAA8B,sBAA9B;AACA,SAA0BC,aAA1B,QAA8C,yBAA9C,C,CAEA;;AACA,MAAMC,kBAAkB,GAAG,CAACD,aAAa,CAACE,GAAf,EAAoBF,aAAa,CAACG,QAAlC,CAA3B;AAEA,OAAM,SAAUC,kBAAV,CACJC,MADI,EAEJC,MAFI,EAEiB;EAErB,MAAMC,KAAK,GAAGF,MAAM,CAACG,QAAP,CAAgBC,SAAhB,CACXC,KAAD,IAAWA,KAAK,CAACJ,MAAN,KAAiBN,aAAa,CAACW,MAD9B,CAAd;;EAGA,IAAIJ,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAK,CAA3B,EAA8B;IAC5BF,MAAM,CAACG,QAAP,CAAgBD,KAAhB,IAAsBK,8CACjBP,MAAM,CAACG,QAAP,CAAgBD,KAAhB,CADiB,GAEjBR,eAAe,CAACO,MAAD,CAFE,GAEM;MAC1BO,IAAI,EAAEf,IAAI,CAACgB,aAAL,CAAmBT,MAAM,CAACQ,IAA1B,EAAgCf,IAAI,CAACiB,YAAL,CAAkBT,MAAlB,EAA0BC,KAA1B,CAAhC;IADoB,CAFN,CAAtB;EAKD;EACD;;;;;;;EAKA,IAAIN,kBAAkB,CAACe,QAAnB,CAA4BX,MAAM,CAACG,QAAP,CAAgBD,KAAhB,EAAuBD,MAAnD,CAAJ,EAAgE;IAC9DD,MAAM,CAACG,QAAP,CAAgBD,KAAhB,EAAuBC,QAAvB,CAAgCS,IAAhC,CAAoCL,gCAC/Bb,eAAe,CAACY,MADe,GACT;MACzBH,QAAQ,EAAE,EADe;MAEzBK,IAAI,EAAEf,IAAI,CAACgB,aAAL,CACJT,MAAM,CAACG,QAAP,CAAgBD,KAAhB,EAAuBM,IADnB,EAEJf,IAAI,CAACiB,YAAL,CACEhB,eAAe,CAACY,MAAhB,CAAuBL,MADzB,EAEED,MAAM,CAACG,QAAP,CAAgBD,KAAhB,EAAuBC,QAAvB,CAAgCU,MAFlC,CAFI;IAFmB,CADS,CAApC;EAWD;EAED;;;;;;;EAKA,IAAIjB,kBAAkB,CAACe,QAAnB,CAA4BX,MAAM,CAACC,MAAnC,CAAJ,EAAgD;IAC9CD,MAAM,CAACG,QAAP,CAAgBS,IAAhB,CAAoBL,gCACfb,eAAe,CAACY,MADD,GACO;MACzBH,QAAQ,EAAE,EADe;MAEzBK,IAAI,EAAEf,IAAI,CAACgB,aAAL,CACJT,MAAM,CAACQ,IADH,EAEJf,IAAI,CAACiB,YAAL,CAAkBhB,eAAe,CAACY,MAAhB,CAAuBL,MAAzC,EAAiDD,MAAM,CAACG,QAAP,CAAgBU,MAAjE,CAFI;IAFmB,CADP,CAApB;EAQD;AACF","names":["Path","ComponentConfig","ComponentPath","NEED_ADD_NEW_CHILD","box","fieldset","addNewNodeInParent","parent","pathId","index","children","findIndex","child","addnew","Object","path","addNodeToPath","makePathNode","includes","push","length"],"sources":["/home/fact-11/Desktop/formApp/formapp/node_modules/@steera/form-manager/src/Comp/FormGenerator/Store/Helpers/addNewNodeInParent.ts"],"sourcesContent":["import {Path} from '../../../../Utils/pathUtils';\nimport {ComponentConfig} from '../../../Comp.config';\nimport {TemplateNodeType, ComponentPath} from '../../../Comp.interface';\n\n// list of components that need ComponentPath.addnew as child\nconst NEED_ADD_NEW_CHILD = [ComponentPath.box, ComponentPath.fieldset];\n\nexport function addNewNodeInParent(\n  parent: TemplateNodeType,\n  pathId: ComponentPath\n) {\n  const index = parent.children.findIndex(\n    (child) => child.pathId === ComponentPath.addnew\n  );\n  if (index > 0 || index === 0) {\n    parent.children[index] = {\n      ...parent.children[index],\n      ...ComponentConfig[pathId],\n      path: Path.addNodeToPath(parent.path, Path.makePathNode(pathId, index)),\n    };\n  }\n  /* \n    If pathId is of newly added Component \n    is ComponentPath.box | ComponentPath.fieldset \n    need to add Component.addnew as initial child \n  */\n  if (NEED_ADD_NEW_CHILD.includes(parent.children[index].pathId)) {\n    parent.children[index].children.push({\n      ...ComponentConfig.addnew,\n      children: [],\n      path: Path.addNodeToPath(\n        parent.children[index].path,\n        Path.makePathNode(\n          ComponentConfig.addnew.pathId,\n          parent.children[index].children.length\n        )\n      ),\n    });\n  }\n\n  /* \n    If parent is of newly added Component \n    is ComponentPath.box | ComponentPath.fieldset \n    need to add Component.addnew as final child \n  */\n  if (NEED_ADD_NEW_CHILD.includes(parent.pathId)) {\n    parent.children.push({\n      ...ComponentConfig.addnew,\n      children: [],\n      path: Path.addNodeToPath(\n        parent.path,\n        Path.makePathNode(ComponentConfig.addnew.pathId, parent.children.length)\n      ),\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}