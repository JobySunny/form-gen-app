{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { Check } from '../Check';\nimport { Label } from '../Label';\nimport { Hint } from '../Hint';\nimport cn from './CheckBox.module.scss';\nexport function CheckBox(props) {\n  const [valid, setValid] = React.useState(true);\n\n  const getClassName = function () {\n    let ele = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return `${cn[`cbox${ele}`]} ${props.className}${ele}`;\n  };\n\n  const getHintShow = () => {\n    if (props.isSubmitted) {\n      return !valid;\n    } else return false;\n  };\n\n  return _jsxs(\"div\", Object.assign({\n    className: getClassName()\n  }, {\n    children: [_jsx(Check, {\n      id: props.id,\n      name: props.name,\n      value: props.value,\n      className: getClassName('_input'),\n      disabled: props.disabled,\n      required: props.required,\n      onChange: props.onChange,\n      checked: props.checked\n    }), _jsx(Label, {\n      for: props.id,\n      text: props.label,\n      required: props.required,\n      className: getClassName('_label')\n    }), _jsx(Hint, {\n      show: getHintShow(),\n      message: props.invalidInputMessage,\n      className: getClassName('_hint')\n    })]\n  }));\n}","map":{"version":3,"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAAQC,KAAR,QAAoB,UAApB;AACA,SAAQC,KAAR,QAAoB,UAApB;AACA,SAAQC,IAAR,QAAmB,SAAnB;AAEA,OAAOC,EAAP,MAAe,wBAAf;AAEA,OAAM,SAAUC,QAAV,CAAmBC,KAAnB,EAA+B;EACnC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,CAAe,IAAf,CAA1B;;EAEA,MAAMC,YAAY,GAAG;IAAA,IAACC,GAAD,uEAAO,EAAP;IAAA,OACnB,GAAGP,EAAE,CAAC,OAAOO,GAAG,EAAX,CAAc,IAAIL,KAAK,CAACM,SAAS,GAAGD,GAAG,EADzB;EAAA,CAArB;;EAGA,MAAME,WAAW,GAAG,MAAc;IAChC,IAAIP,KAAK,CAACQ,WAAV,EAAuB;MACrB,OAAO,CAACP,KAAR;IACD,CAFD,MAEO,OAAO,KAAP;EACR,CAJD;;EAMA,OACEQ;IAAKH,SAAS,EAAEF,YAAY;EAA5B,GAA8B;IAAAM,WAC5BC,KAAChB,KAAD,EAAM;MACJiB,EAAE,EAAEZ,KAAK,CAACY,EADN;MAEJC,IAAI,EAAEb,KAAK,CAACa,IAFR;MAGJC,KAAK,EAAEd,KAAK,CAACc,KAHT;MAIJR,SAAS,EAAEF,YAAY,CAAC,QAAD,CAJnB;MAKJW,QAAQ,EAAEf,KAAK,CAACe,QALZ;MAMJC,QAAQ,EAAEhB,KAAK,CAACgB,QANZ;MAOJC,QAAQ,EAAEjB,KAAK,CAACiB,QAPZ;MAQJC,OAAO,EAAElB,KAAK,CAACkB;IARX,CAAN,CAD4B,EAW5BP,KAACf,KAAD,EAAM;MACJuB,GAAG,EAAEnB,KAAK,CAACY,EADP;MAEJQ,IAAI,EAAEpB,KAAK,CAACqB,KAFR;MAGJL,QAAQ,EAAEhB,KAAK,CAACgB,QAHZ;MAIJV,SAAS,EAAEF,YAAY,CAAC,QAAD;IAJnB,CAAN,CAX4B,EAiB5BO,KAACd,IAAD,EAAK;MACHyB,IAAI,EAAEf,WAAW,EADd;MAEHgB,OAAO,EAAEvB,KAAK,CAACwB,mBAFZ;MAGHlB,SAAS,EAAEF,YAAY,CAAC,OAAD;IAHpB,CAAL,CAjB4B;EAAA,CAA9B,EADF;AAyBD","names":["React","Check","Label","Hint","cn","CheckBox","props","valid","setValid","useState","getClassName","ele","className","getHintShow","isSubmitted","_jsxs","children","_jsx","id","name","value","disabled","required","onChange","checked","for","text","label","show","message","invalidInputMessage"],"sources":["/home/fact-11/Desktop/formApp/formapp/node_modules/@steera/form-manager/src/Components/CheckBox/CheckBox.tsx"],"sourcesContent":["import React from 'react';\nimport {CheckBoxProps as Props} from './CheckBox.interface';\n\nimport {Check} from '../Check';\nimport {Label} from '../Label';\nimport {Hint} from '../Hint';\n\nimport cn from './CheckBox.module.scss';\n\nexport function CheckBox(props: Props) {\n  const [valid, setValid] = React.useState(true);\n\n  const getClassName = (ele = '') =>\n    `${cn[`cbox${ele}`]} ${props.className}${ele}`;\n\n  const getHintShow = (): boolean => {\n    if (props.isSubmitted) {\n      return !valid;\n    } else return false;\n  };\n\n  return (\n    <div className={getClassName()}>\n      <Check\n        id={props.id}\n        name={props.name}\n        value={props.value}\n        className={getClassName('_input')}\n        disabled={props.disabled}\n        required={props.required}\n        onChange={props.onChange}\n        checked={props.checked}\n      />\n      <Label\n        for={props.id}\n        text={props.label}\n        required={props.required}\n        className={getClassName('_label')}\n      />\n      <Hint\n        show={getHintShow()}\n        message={props.invalidInputMessage}\n        className={getClassName('_hint')}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}