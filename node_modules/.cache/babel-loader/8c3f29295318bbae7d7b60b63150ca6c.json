{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { TextBox as TB } from '../../../../Components/TextBox';\nimport { useAppDispatch, useAppSelector } from '../../StoreProvider';\nimport { Action, Selector } from '../../Store';\nimport cn from './TextBox.module.scss';\nexport function TextBox(props) {\n  const dispatch = useAppDispatch();\n  const isPreview = useAppSelector(Selector.getIsPreview);\n  const selectedPath = useAppSelector(Selector.getSelectedNodePath);\n  const className = `${props.className} ${cn.viewOnly}`;\n\n  const onClick = e => {\n    e.stopPropagation();\n    dispatch(Action.selectComponent(props.path));\n  };\n\n  const wrapClass = `${cn.opt} ${props.path === selectedPath ? cn.selected : ''}`;\n\n  const component = _jsx(TB, {\n    id: props.id,\n    label: props.label,\n    name: props.name,\n    pattern: props.pattern,\n    className: className,\n    required: props.required,\n    minLength: props.minLength,\n    maxLength: props.maxLength,\n    invalidInputMessage: props.invalidInputMessage,\n    isSubmitted: props.isSubmitted,\n    disabled: props.disabled,\n    placeholder: props.placeholder\n  });\n\n  if (isPreview) {\n    return component;\n  } else {\n    return _jsx(\"div\", Object.assign({\n      className: wrapClass,\n      onClick: onClick\n    }, {\n      children: component\n    }));\n  }\n}","map":{"version":3,"mappings":";AAGA,SAAQA,OAAO,IAAIC,EAAnB,QAA4B,gCAA5B;AACA,SAAQC,cAAR,EAAwBC,cAAxB,QAA6C,qBAA7C;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,aAA/B;AAEA,OAAOC,EAAP,MAAe,uBAAf;AAEA,OAAM,SAAUN,OAAV,CAAkBO,KAAlB,EAA8B;EAClC,MAAMC,QAAQ,GAAGN,cAAc,EAA/B;EAEA,MAAMO,SAAS,GAAGN,cAAc,CAACE,QAAQ,CAACK,YAAV,CAAhC;EAEA,MAAMC,YAAY,GAAGR,cAAc,CAACE,QAAQ,CAACO,mBAAV,CAAnC;EAEA,MAAMC,SAAS,GAAG,GAAGN,KAAK,CAACM,SAAS,IAAIP,EAAE,CAACQ,QAAQ,EAAnD;;EAEA,MAAMC,OAAO,GAAIC,CAAD,IAAwB;IACtCA,CAAC,CAACC,eAAF;IACAT,QAAQ,CAACJ,MAAM,CAACc,eAAP,CAAuBX,KAAK,CAACY,IAA7B,CAAD,CAAR;EACD,CAHD;;EAKA,MAAMC,SAAS,GAAG,GAAGd,EAAE,CAACe,GAAG,IACzBd,KAAK,CAACY,IAAN,KAAeR,YAAf,GAA8BL,EAAE,CAACgB,QAAjC,GAA4C,EAC9C,EAFA;;EAIA,MAAMC,SAAS,GACbC,KAACvB,EAAD,EAAG;IACDwB,EAAE,EAAElB,KAAK,CAACkB,EADT;IAEDC,KAAK,EAAEnB,KAAK,CAACmB,KAFZ;IAGDC,IAAI,EAAEpB,KAAK,CAACoB,IAHX;IAIDC,OAAO,EAAErB,KAAK,CAACqB,OAJd;IAKDf,SAAS,EAAEA,SALV;IAMDgB,QAAQ,EAAEtB,KAAK,CAACsB,QANf;IAODC,SAAS,EAAEvB,KAAK,CAACuB,SAPhB;IAQDC,SAAS,EAAExB,KAAK,CAACwB,SARhB;IASDC,mBAAmB,EAAEzB,KAAK,CAACyB,mBAT1B;IAUDC,WAAW,EAAE1B,KAAK,CAAC0B,WAVlB;IAWDC,QAAQ,EAAE3B,KAAK,CAAC2B,QAXf;IAYDC,WAAW,EAAE5B,KAAK,CAAC4B;EAZlB,CAAH,CADF;;EAiBA,IAAI1B,SAAJ,EAAe;IACb,OAAOc,SAAP;EACD,CAFD,MAEO;IACL,OACEC;MAAKX,SAAS,EAAEO,SAAhB;MAA2BL,OAAO,EAAEA;IAApC,GAA2C;MAAAqB,UACxCb;IADwC,CAA3C,EADF;EAKD;AACF","names":["TextBox","TB","useAppDispatch","useAppSelector","Action","Selector","cn","props","dispatch","isPreview","getIsPreview","selectedPath","getSelectedNodePath","className","viewOnly","onClick","e","stopPropagation","selectComponent","path","wrapClass","opt","selected","component","_jsx","id","label","name","pattern","required","minLength","maxLength","invalidInputMessage","isSubmitted","disabled","placeholder","children"],"sources":["/home/fact-11/Desktop/formApp/formapp/node_modules/@steera/form-manager/src/Comp/FormGenerator/CanvasComponents/TextBox/TextBox.tsx"],"sourcesContent":["import React from 'react';\nimport {TextBoxProps as Props} from './TextBox.interface';\n\nimport {TextBox as TB} from '../../../../Components/TextBox';\nimport {useAppDispatch, useAppSelector} from '../../StoreProvider';\nimport {Action, Selector} from '../../Store';\n\nimport cn from './TextBox.module.scss';\n\nexport function TextBox(props: Props) {\n  const dispatch = useAppDispatch();\n\n  const isPreview = useAppSelector(Selector.getIsPreview);\n\n  const selectedPath = useAppSelector(Selector.getSelectedNodePath);\n\n  const className = `${props.className} ${cn.viewOnly}`;\n\n  const onClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    dispatch(Action.selectComponent(props.path));\n  };\n\n  const wrapClass = `${cn.opt} ${\n    props.path === selectedPath ? cn.selected : ''\n  }`;\n\n  const component = (\n    <TB\n      id={props.id}\n      label={props.label}\n      name={props.name}\n      pattern={props.pattern}\n      className={className}\n      required={props.required}\n      minLength={props.minLength}\n      maxLength={props.maxLength}\n      invalidInputMessage={props.invalidInputMessage}\n      isSubmitted={props.isSubmitted}\n      disabled={props.disabled}\n      placeholder={props.placeholder}\n    />\n  );\n\n  if (isPreview) {\n    return component;\n  } else {\n    return (\n      <div className={wrapClass} onClick={onClick}>\n        {component}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}