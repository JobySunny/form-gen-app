{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { SelectBox as SB } from '../../../../Components/SelectBox';\nimport { useAppDispatch, useAppSelector } from '../../StoreProvider';\nimport { Action, Selector } from '../../Store';\nimport cn from './SelectBox.module.scss';\nexport function SelectBox(props) {\n  const dispatch = useAppDispatch();\n  const isPreview = useAppSelector(Selector.getIsPreview);\n  const selectedPath = useAppSelector(Selector.getSelectedNodePath);\n\n  const onClick = e => {\n    e.stopPropagation();\n    dispatch(Action.selectComponent(props.path));\n  };\n\n  const wrapClass = `${cn.opt} ${props.path === selectedPath ? cn.selected : ''}`;\n  const className = `${props.className} ${cn.viewOnly}`;\n\n  const onChange = e => {};\n\n  const component = _jsx(SB, {\n    id: props.id,\n    label: props.label,\n    name: props.name,\n    onChange: onChange,\n    className: className,\n    options: props.options,\n    required: props.required,\n    disabled: props.disabled,\n    placeholder: props.placeholder,\n    invalidInputMessage: props.invalidInputMessage\n  });\n\n  if (isPreview) {\n    return component;\n  } else {\n    return _jsx(\"div\", Object.assign({\n      className: wrapClass,\n      onClick: onClick\n    }, {\n      children: component\n    }));\n  }\n}","map":{"version":3,"mappings":";AAEA,SACEA,SAAS,IAAIC,EADf,QAGO,kCAHP;AAIA,SAAQC,cAAR,EAAwBC,cAAxB,QAA6C,qBAA7C;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,aAA/B;AAEA,OAAOC,EAAP,MAAe,yBAAf;AAEA,OAAM,SAAUN,SAAV,CAAoBO,KAApB,EAAgC;EACpC,MAAMC,QAAQ,GAAGN,cAAc,EAA/B;EAEA,MAAMO,SAAS,GAAGN,cAAc,CAACE,QAAQ,CAACK,YAAV,CAAhC;EAEA,MAAMC,YAAY,GAAGR,cAAc,CAACE,QAAQ,CAACO,mBAAV,CAAnC;;EAEA,MAAMC,OAAO,GAAIC,CAAD,IAAwB;IACtCA,CAAC,CAACC,eAAF;IACAP,QAAQ,CAACJ,MAAM,CAACY,eAAP,CAAuBT,KAAK,CAACU,IAA7B,CAAD,CAAR;EACD,CAHD;;EAKA,MAAMC,SAAS,GAAG,GAAGZ,EAAE,CAACa,GAAG,IACzBZ,KAAK,CAACU,IAAN,KAAeN,YAAf,GAA8BL,EAAE,CAACc,QAAjC,GAA4C,EAC9C,EAFA;EAIA,MAAMC,SAAS,GAAG,GAAGd,KAAK,CAACc,SAAS,IAAIf,EAAE,CAACgB,QAAQ,EAAnD;;EAEA,MAAMC,QAAQ,GAAqBT,CAAD,IAAM,CAAG,CAA3C;;EAEA,MAAMU,SAAS,GACbC,KAACxB,EAAD,EAAG;IACDyB,EAAE,EAAEnB,KAAK,CAACmB,EADT;IAEDC,KAAK,EAAEpB,KAAK,CAACoB,KAFZ;IAGDC,IAAI,EAAErB,KAAK,CAACqB,IAHX;IAIDL,QAAQ,EAAEA,QAJT;IAKDF,SAAS,EAAEA,SALV;IAMDQ,OAAO,EAAEtB,KAAK,CAACsB,OANd;IAODC,QAAQ,EAAEvB,KAAK,CAACuB,QAPf;IAQDC,QAAQ,EAAExB,KAAK,CAACwB,QARf;IASDC,WAAW,EAAEzB,KAAK,CAACyB,WATlB;IAUDC,mBAAmB,EAAE1B,KAAK,CAAC0B;EAV1B,CAAH,CADF;;EAeA,IAAIxB,SAAJ,EAAe;IACb,OAAOe,SAAP;EACD,CAFD,MAEO;IACL,OACEC;MAAKJ,SAAS,EAAEH,SAAhB;MAA2BL,OAAO,EAAEA;IAApC,GAA2C;MAAAqB,UACxCV;IADwC,CAA3C,EADF;EAKD;AACF","names":["SelectBox","SB","useAppDispatch","useAppSelector","Action","Selector","cn","props","dispatch","isPreview","getIsPreview","selectedPath","getSelectedNodePath","onClick","e","stopPropagation","selectComponent","path","wrapClass","opt","selected","className","viewOnly","onChange","component","_jsx","id","label","name","options","required","disabled","placeholder","invalidInputMessage","children"],"sources":["/home/fact-11/Desktop/formApp/formapp/node_modules/@steera/form-manager/src/Comp/FormGenerator/CanvasComponents/SelectBox/SelectBox.tsx"],"sourcesContent":["import React from 'react';\nimport {SelectBoxProps as Props} from './SelectBox.interface';\nimport {\n  SelectBox as SB,\n  SelectBoxProps as SBP,\n} from '../../../../Components/SelectBox';\nimport {useAppDispatch, useAppSelector} from '../../StoreProvider';\nimport {Action, Selector} from '../../Store';\n\nimport cn from './SelectBox.module.scss';\n\nexport function SelectBox(props: Props) {\n  const dispatch = useAppDispatch();\n\n  const isPreview = useAppSelector(Selector.getIsPreview);\n\n  const selectedPath = useAppSelector(Selector.getSelectedNodePath);\n\n  const onClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    dispatch(Action.selectComponent(props.path));\n  };\n\n  const wrapClass = `${cn.opt} ${\n    props.path === selectedPath ? cn.selected : ''\n  }`;\n\n  const className = `${props.className} ${cn.viewOnly}`;\n\n  const onChange: SBP['onChange'] = (e) => {};\n\n  const component = (\n    <SB\n      id={props.id}\n      label={props.label}\n      name={props.name}\n      onChange={onChange}\n      className={className}\n      options={props.options}\n      required={props.required}\n      disabled={props.disabled}\n      placeholder={props.placeholder}\n      invalidInputMessage={props.invalidInputMessage}\n    />\n  );\n\n  if (isPreview) {\n    return component;\n  } else {\n    return (\n      <div className={wrapClass} onClick={onClick}>\n        {component}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}