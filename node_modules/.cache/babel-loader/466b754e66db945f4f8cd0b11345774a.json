{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport * as React from 'react';\nimport cn from './SelectBox.module.scss';\nimport { Block } from './Block';\nimport { Label } from '../Label';\nimport { Hint } from '../Hint';\nimport { SelectInput as Select } from '../SelectInput';\nexport function SelectBox(props) {\n  const [valid, setValid] = React.useState(true);\n\n  const getClassName = function () {\n    let ele = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return `${cn[`asb${ele}`]} ${props.className}${ele}`;\n  };\n\n  const getHintShow = () => {\n    if (props.isSubmitted) {\n      return !valid;\n    } else return false;\n  };\n\n  return _jsxs(Block, Object.assign({\n    className: getClassName('')\n  }, {\n    children: [_jsx(Label, {\n      for: props.id,\n      text: props.label,\n      required: props.required,\n      className: getClassName('_label')\n    }), _jsx(Select, {\n      id: props.id,\n      name: props.name,\n      value: props.value,\n      options: props.options,\n      onChange: props.onChange,\n      disabled: props.disabled,\n      required: props.required,\n      placeholder: props.placeholder,\n      testId: `${props.testId}_select`,\n      className: getClassName('_select')\n    }), _jsx(Hint, {\n      show: getHintShow(),\n      message: props.invalidInputMessage,\n      className: getClassName('_hint')\n    })]\n  }));\n}","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,EAAP,MAAe,yBAAf;AAGA,SAAQC,KAAR,QAAoB,SAApB;AACA,SAAQC,KAAR,QAAoB,UAApB;AACA,SAAQC,IAAR,QAAmB,SAAnB;AACA,SAAQC,WAAW,IAAIC,MAAvB,QAAoC,gBAApC;AAEA,OAAM,SAAUC,SAAV,CAAoBC,KAApB,EAAyC;EAC7C,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,KAAK,CAACW,QAAN,CAAe,IAAf,CAA1B;;EAEA,MAAMC,YAAY,GAAG;IAAA,IAACC,GAAD,uEAAO,EAAP;IAAA,OACnB,GAAGZ,EAAE,CAAC,MAAMY,GAAG,EAAV,CAAa,IAAIL,KAAK,CAACM,SAAS,GAAGD,GAAG,EADxB;EAAA,CAArB;;EAGA,MAAME,WAAW,GAAG,MAAc;IAChC,IAAIP,KAAK,CAACQ,WAAV,EAAuB;MACrB,OAAO,CAACP,KAAR;IACD,CAFD,MAEO,OAAO,KAAP;EACR,CAJD;;EAMA,OACEQ,MAACf,KAAD,EAAMgB;IAACJ,SAAS,EAAEF,YAAY,CAAC,EAAD;EAAxB,GAA4B;IAAAO,WAChCC,KAACjB,KAAD,EAAM;MACJkB,GAAG,EAAEb,KAAK,CAACc,EADP;MAEJC,IAAI,EAAEf,KAAK,CAACgB,KAFR;MAGJC,QAAQ,EAAEjB,KAAK,CAACiB,QAHZ;MAIJX,SAAS,EAAEF,YAAY,CAAC,QAAD;IAJnB,CAAN,CADgC,EAOhCQ,KAACd,MAAD,EAAO;MACLgB,EAAE,EAAEd,KAAK,CAACc,EADL;MAELI,IAAI,EAAElB,KAAK,CAACkB,IAFP;MAGLC,KAAK,EAAEnB,KAAK,CAACmB,KAHR;MAILC,OAAO,EAAEpB,KAAK,CAACoB,OAJV;MAKLC,QAAQ,EAAErB,KAAK,CAACqB,QALX;MAMLC,QAAQ,EAAEtB,KAAK,CAACsB,QANX;MAOLL,QAAQ,EAAEjB,KAAK,CAACiB,QAPX;MAQLM,WAAW,EAAEvB,KAAK,CAACuB,WARd;MASLC,MAAM,EAAE,GAAGxB,KAAK,CAACwB,MAAM,SATlB;MAULlB,SAAS,EAAEF,YAAY,CAAC,SAAD;IAVlB,CAAP,CAPgC,EAmBhCQ,KAAChB,IAAD,EAAK;MACH6B,IAAI,EAAElB,WAAW,EADd;MAEHmB,OAAO,EAAE1B,KAAK,CAAC2B,mBAFZ;MAGHrB,SAAS,EAAEF,YAAY,CAAC,OAAD;IAHpB,CAAL,CAnBgC;EAAA,CAA5B,CAAN,CADF;AA2BD","names":["React","cn","Block","Label","Hint","SelectInput","Select","SelectBox","props","valid","setValid","useState","getClassName","ele","className","getHintShow","isSubmitted","_jsxs","Object","children","_jsx","for","id","text","label","required","name","value","options","onChange","disabled","placeholder","testId","show","message","invalidInputMessage"],"sources":["/home/fact-11/Desktop/formApp/formapp/node_modules/@steera/form-manager/src/Components/SelectBox/SelectBox.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport cn from './SelectBox.module.scss';\r\nimport {SelectBoxProps} from './SelectBox.interface';\r\n\r\nimport {Block} from './Block';\r\nimport {Label} from '../Label';\r\nimport {Hint} from '../Hint';\r\nimport {SelectInput as Select} from '../SelectInput';\r\n\r\nexport function SelectBox(props: SelectBoxProps): JSX.Element {\r\n  const [valid, setValid] = React.useState(true);\r\n\r\n  const getClassName = (ele = '') =>\r\n    `${cn[`asb${ele}`]} ${props.className}${ele}`;\r\n\r\n  const getHintShow = (): boolean => {\r\n    if (props.isSubmitted) {\r\n      return !valid;\r\n    } else return false;\r\n  };\r\n\r\n  return (\r\n    <Block className={getClassName('')}>\r\n      <Label\r\n        for={props.id}\r\n        text={props.label}\r\n        required={props.required}\r\n        className={getClassName('_label')}\r\n      />\r\n      <Select\r\n        id={props.id}\r\n        name={props.name}\r\n        value={props.value}\r\n        options={props.options}\r\n        onChange={props.onChange}\r\n        disabled={props.disabled}\r\n        required={props.required}\r\n        placeholder={props.placeholder}\r\n        testId={`${props.testId}_select`}\r\n        className={getClassName('_select')}\r\n      />\r\n      <Hint\r\n        show={getHintShow()}\r\n        message={props.invalidInputMessage}\r\n        className={getClassName('_hint')}\r\n      />\r\n    </Block>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}