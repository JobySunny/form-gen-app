{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { ComponentPath } from '../../Comp.interface';\nimport { Box, EmailBox, PasswordBox, TextBox, NumberBox, DateBox, RadioBox, CheckBox, SelectBox, Fieldset, Title } from '../RenderComponents';\nexport function FormCanvas(props) {\n  const renderBox = c => _jsx(Box, Object.assign({\n    options: c.options\n  }, {\n    children: c.children.map(renderTemplateComponent)\n  }), c.path);\n\n  const renderEmailBox = c => _jsx(EmailBox, {\n    options: c.options,\n    templateValues: props.templateValues\n  }, c.path);\n\n  const renderTextBox = c => _jsx(TextBox, {\n    options: c.options,\n    templateValues: props.templateValues\n  }, c.path);\n\n  const renderPasswordBox = c => _jsx(PasswordBox, {\n    options: c.options,\n    templateValues: props.templateValues\n  }, c.path);\n\n  const renderNumberBox = c => _jsx(NumberBox, {\n    options: c.options,\n    templateValues: props.templateValues\n  }, c.path);\n\n  const renderDateBox = c => _jsx(DateBox, {\n    options: c.options,\n    templateValues: props.templateValues\n  }, c.path);\n\n  const renderRadioBox = c => _jsx(RadioBox, {\n    options: c.options,\n    templateValues: props.templateValues\n  }, c.path);\n\n  const renderCheckBox = c => _jsx(CheckBox, {\n    options: c.options,\n    templateValues: props.templateValues\n  }, c.path);\n\n  const renderSelectBox = c => _jsx(SelectBox, {\n    options: c.options,\n    templateValues: props.templateValues\n  }, c.path);\n\n  const renderFieldset = c => _jsx(Fieldset, Object.assign({\n    options: c.options\n  }, {\n    children: c.children.map(renderTemplateComponent)\n  }), c.path);\n\n  const renderTitle = c => _jsx(Title, {\n    options: c.options\n  }, c.path);\n\n  const renderTemplateComponent = c => {\n    switch (c.pathId) {\n      case ComponentPath.box:\n        return renderBox(c);\n\n      case ComponentPath.emailbox:\n        return renderEmailBox(c);\n\n      case ComponentPath.textbox:\n        return renderTextBox(c);\n\n      case ComponentPath.passwordbox:\n        return renderPasswordBox(c);\n\n      case ComponentPath.numberbox:\n        return renderNumberBox(c);\n\n      case ComponentPath.datebox:\n        return renderDateBox(c);\n\n      case ComponentPath.radiobox:\n        return renderRadioBox(c);\n\n      case ComponentPath.checkbox:\n        return renderCheckBox(c);\n\n      case ComponentPath.selectbox:\n        return renderSelectBox(c);\n\n      case ComponentPath.fieldset:\n        return renderFieldset(c);\n\n      case ComponentPath.title:\n        return renderTitle(c);\n\n      default:\n        return null;\n    }\n  };\n\n  return props.template.map(renderTemplateComponent);\n}","map":{"version":3,"mappings":";AAGA,SAAQA,aAAR,QAA8C,sBAA9C;AAEA,SACEC,GADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,OAJF,EAKEC,SALF,EAMEC,OANF,EAOEC,QAPF,EAQEC,QARF,EASEC,SATF,EAUEC,QAVF,EAWEC,KAXF,QAYO,qBAZP;AAcA,OAAM,SAAUC,UAAV,CAAqBC,KAArB,EAAiC;EACrC,MAAMC,SAAS,GAAIC,CAAD,IAChBC,KAACf,GAAD,EAAIgB;IAAcC,OAAO,EAAEH,CAAC,CAACG;EAAzB,GAAgC;IAAAC,UACjCJ,CAAC,CAACI,QAAF,CAAWC,GAAX,CAAeC,uBAAf;EADiC,CAAhC,CAAJ,EAAUN,CAAC,CAACO,IAAZ,CADF;;EAMA,MAAMC,cAAc,GAAIR,CAAD,IACrBC,KAACd,QAAD,EAAS;IAEPgB,OAAO,EAAEH,CAAC,CAACG,OAFJ;IAGPM,cAAc,EAAEX,KAAK,CAACW;EAHf,CAAT,EACOT,CAAC,CAACO,IADT,CADF;;EAQA,MAAMG,aAAa,GAAIV,CAAD,IACpBC,KAACZ,OAAD,EAAQ;IAENc,OAAO,EAAEH,CAAC,CAACG,OAFL;IAGNM,cAAc,EAAEX,KAAK,CAACW;EAHhB,CAAR,EACOT,CAAC,CAACO,IADT,CADF;;EAQA,MAAMI,iBAAiB,GAAIX,CAAD,IACxBC,KAACb,WAAD,EAAY;IAEVe,OAAO,EAAEH,CAAC,CAACG,OAFD;IAGVM,cAAc,EAAEX,KAAK,CAACW;EAHZ,CAAZ,EACOT,CAAC,CAACO,IADT,CADF;;EAQA,MAAMK,eAAe,GAAIZ,CAAD,IACtBC,KAACX,SAAD,EAAU;IAERa,OAAO,EAAEH,CAAC,CAACG,OAFH;IAGRM,cAAc,EAAEX,KAAK,CAACW;EAHd,CAAV,EACOT,CAAC,CAACO,IADT,CADF;;EAQA,MAAMM,aAAa,GAAIb,CAAD,IACpBC,KAACV,OAAD,EAAQ;IAENY,OAAO,EAAEH,CAAC,CAACG,OAFL;IAGNM,cAAc,EAAEX,KAAK,CAACW;EAHhB,CAAR,EACOT,CAAC,CAACO,IADT,CADF;;EAQA,MAAMO,cAAc,GAAId,CAAD,IACrBC,KAACT,QAAD,EAAS;IAEPW,OAAO,EAAEH,CAAC,CAACG,OAFJ;IAGPM,cAAc,EAAEX,KAAK,CAACW;EAHf,CAAT,EACOT,CAAC,CAACO,IADT,CADF;;EAQA,MAAMQ,cAAc,GAAIf,CAAD,IACrBC,KAACR,QAAD,EAAS;IAEPU,OAAO,EAAEH,CAAC,CAACG,OAFJ;IAGPM,cAAc,EAAEX,KAAK,CAACW;EAHf,CAAT,EACOT,CAAC,CAACO,IADT,CADF;;EAQA,MAAMS,eAAe,GAAIhB,CAAD,IACtBC,KAACP,SAAD,EAAU;IAERS,OAAO,EAAEH,CAAC,CAACG,OAFH;IAGRM,cAAc,EAAEX,KAAK,CAACW;EAHd,CAAV,EACOT,CAAC,CAACO,IADT,CADF;;EAQA,MAAMU,cAAc,GAAIjB,CAAD,IACrBC,KAACN,QAAD,EAASO;IAAcC,OAAO,EAAEH,CAAC,CAACG;EAAzB,GAAgC;IAAAC,UACtCJ,CAAC,CAACI,QAAF,CAAWC,GAAX,CAAeC,uBAAf;EADsC,CAAhC,CAAT,EAAeN,CAAC,CAACO,IAAjB,CADF;;EAMA,MAAMW,WAAW,GAAIlB,CAAD,IAClBC,KAACL,KAAD,EAAM;IAAcO,OAAO,EAAEH,CAAC,CAACG;EAAzB,CAAN,EAAYH,CAAC,CAACO,IAAd,CADF;;EAIA,MAAMD,uBAAuB,GAAIN,CAAD,IAAwB;IACtD,QAAQA,CAAC,CAACmB,MAAV;MACE,KAAKlC,aAAa,CAACmC,GAAnB;QACE,OAAOrB,SAAS,CAACC,CAAD,CAAhB;;MACF,KAAKf,aAAa,CAACoC,QAAnB;QACE,OAAOb,cAAc,CAACR,CAAD,CAArB;;MACF,KAAKf,aAAa,CAACqC,OAAnB;QACE,OAAOZ,aAAa,CAACV,CAAD,CAApB;;MACF,KAAKf,aAAa,CAACsC,WAAnB;QACE,OAAOZ,iBAAiB,CAACX,CAAD,CAAxB;;MACF,KAAKf,aAAa,CAACuC,SAAnB;QACE,OAAOZ,eAAe,CAACZ,CAAD,CAAtB;;MACF,KAAKf,aAAa,CAACwC,OAAnB;QACE,OAAOZ,aAAa,CAACb,CAAD,CAApB;;MACF,KAAKf,aAAa,CAACyC,QAAnB;QACE,OAAOZ,cAAc,CAACd,CAAD,CAArB;;MACF,KAAKf,aAAa,CAAC0C,QAAnB;QACE,OAAOZ,cAAc,CAACf,CAAD,CAArB;;MACF,KAAKf,aAAa,CAAC2C,SAAnB;QACE,OAAOZ,eAAe,CAAChB,CAAD,CAAtB;;MACF,KAAKf,aAAa,CAAC4C,QAAnB;QACE,OAAOZ,cAAc,CAACjB,CAAD,CAArB;;MACF,KAAKf,aAAa,CAAC6C,KAAnB;QACE,OAAOZ,WAAW,CAAClB,CAAD,CAAlB;;MACF;QACE,OAAO,IAAP;IAxBJ;EA0BD,CA3BD;;EA6BA,OAAOF,KAAK,CAACiC,QAAN,CAAe1B,GAAf,CAAmBC,uBAAnB,CAAP;AACD","names":["ComponentPath","Box","EmailBox","PasswordBox","TextBox","NumberBox","DateBox","RadioBox","CheckBox","SelectBox","Fieldset","Title","FormCanvas","props","renderBox","c","_jsx","Object","options","children","map","renderTemplateComponent","path","renderEmailBox","templateValues","renderTextBox","renderPasswordBox","renderNumberBox","renderDateBox","renderRadioBox","renderCheckBox","renderSelectBox","renderFieldset","renderTitle","pathId","box","emailbox","textbox","passwordbox","numberbox","datebox","radiobox","checkbox","selectbox","fieldset","title","template"],"sources":["/home/fact-11/Desktop/formApp/formapp/node_modules/@steera/form-manager/src/Comp/FormRenderer/FormCanvas/FormCanvas.tsx"],"sourcesContent":["import React from 'react';\nimport {FormCanvasProps as Props} from './FormCanvas.interface';\n\nimport {ComponentPath, TemplateNodeType} from '../../Comp.interface';\n\nimport {\n  Box,\n  EmailBox,\n  PasswordBox,\n  TextBox,\n  NumberBox,\n  DateBox,\n  RadioBox,\n  CheckBox,\n  SelectBox,\n  Fieldset,\n  Title,\n} from '../RenderComponents';\n\nexport function FormCanvas(props: Props): React.ReactElement<any, any> {\n  const renderBox = (c: TemplateNodeType) => (\n    <Box key={c.path} options={c.options}>\n      {c.children.map(renderTemplateComponent)}\n    </Box>\n  );\n\n  const renderEmailBox = (c: TemplateNodeType) => (\n    <EmailBox\n      key={c.path}\n      options={c.options}\n      templateValues={props.templateValues}\n    />\n  );\n\n  const renderTextBox = (c: TemplateNodeType) => (\n    <TextBox\n      key={c.path}\n      options={c.options}\n      templateValues={props.templateValues}\n    />\n  );\n\n  const renderPasswordBox = (c: TemplateNodeType) => (\n    <PasswordBox\n      key={c.path}\n      options={c.options}\n      templateValues={props.templateValues}\n    />\n  );\n\n  const renderNumberBox = (c: TemplateNodeType) => (\n    <NumberBox\n      key={c.path}\n      options={c.options}\n      templateValues={props.templateValues}\n    />\n  );\n\n  const renderDateBox = (c: TemplateNodeType) => (\n    <DateBox\n      key={c.path}\n      options={c.options}\n      templateValues={props.templateValues}\n    />\n  );\n\n  const renderRadioBox = (c: TemplateNodeType) => (\n    <RadioBox\n      key={c.path}\n      options={c.options}\n      templateValues={props.templateValues}\n    />\n  );\n\n  const renderCheckBox = (c: TemplateNodeType) => (\n    <CheckBox\n      key={c.path}\n      options={c.options}\n      templateValues={props.templateValues}\n    />\n  );\n\n  const renderSelectBox = (c: TemplateNodeType) => (\n    <SelectBox\n      key={c.path}\n      options={c.options}\n      templateValues={props.templateValues}\n    />\n  );\n\n  const renderFieldset = (c: TemplateNodeType) => (\n    <Fieldset key={c.path} options={c.options}>\n      {c.children.map(renderTemplateComponent)}\n    </Fieldset>\n  );\n\n  const renderTitle = (c: TemplateNodeType) => (\n    <Title key={c.path} options={c.options} />\n  );\n\n  const renderTemplateComponent = (c: TemplateNodeType) => {\n    switch (c.pathId) {\n      case ComponentPath.box:\n        return renderBox(c);\n      case ComponentPath.emailbox:\n        return renderEmailBox(c);\n      case ComponentPath.textbox:\n        return renderTextBox(c);\n      case ComponentPath.passwordbox:\n        return renderPasswordBox(c);\n      case ComponentPath.numberbox:\n        return renderNumberBox(c);\n      case ComponentPath.datebox:\n        return renderDateBox(c);\n      case ComponentPath.radiobox:\n        return renderRadioBox(c);\n      case ComponentPath.checkbox:\n        return renderCheckBox(c);\n      case ComponentPath.selectbox:\n        return renderSelectBox(c);\n      case ComponentPath.fieldset:\n        return renderFieldset(c);\n      case ComponentPath.title:\n        return renderTitle(c);\n      default:\n        return null;\n    }\n  };\n\n  return props.template.map(renderTemplateComponent) as any;\n}\n"]},"metadata":{},"sourceType":"module"}