{"ast":null,"code":"export function getID(option) {\n  return option.input.value;\n}\nexport function getLabel(option) {\n  return option.input.value;\n}\nexport function getName(option) {\n  return option.input.value;\n}\nexport function getDisabled(option) {\n  return option.input.checked;\n}\nexport function getRequired(option) {\n  return option.input.checked;\n}\nexport function getPlaceholder(option) {\n  return option.input.value;\n}\nexport function getClassName(option) {\n  return option.input.value;\n}\nexport function getInvalidMessage(option) {\n  return option.input.value;\n}\nexport function getOptions(option) {\n  return option.input.optionItems;\n}\nexport function getValue(templateValues, options) {\n  const name = options.name.input.value;\n  const optionItems = options.options.input.optionItems;\n\n  if (templateValues && templateValues.hasOwnProperty(name)) {\n    return optionItems.find(o => o.value === templateValues[name]);\n  }\n}","map":{"version":3,"mappings":"AAGA,OAAM,SAAUA,KAAV,CAAgBC,MAAhB,EAAkC;EACtC,OAAOA,MAAM,CAACC,KAAP,CAAaC,KAApB;AACD;AAED,OAAM,SAAUC,QAAV,CAAmBH,MAAnB,EAAqC;EACzC,OAAOA,MAAM,CAACC,KAAP,CAAaC,KAApB;AACD;AAED,OAAM,SAAUE,OAAV,CAAkBJ,MAAlB,EAAoC;EACxC,OAAOA,MAAM,CAACC,KAAP,CAAaC,KAApB;AACD;AAED,OAAM,SAAUG,WAAV,CAAsBL,MAAtB,EAAwC;EAC5C,OAAOA,MAAM,CAACC,KAAP,CAAaK,OAApB;AACD;AAED,OAAM,SAAUC,WAAV,CAAsBP,MAAtB,EAAwC;EAC5C,OAAOA,MAAM,CAACC,KAAP,CAAaK,OAApB;AACD;AAED,OAAM,SAAUE,cAAV,CAAyBR,MAAzB,EAA2C;EAC/C,OAAOA,MAAM,CAACC,KAAP,CAAaC,KAApB;AACD;AAED,OAAM,SAAUO,YAAV,CAAuBT,MAAvB,EAAyC;EAC7C,OAAOA,MAAM,CAACC,KAAP,CAAaC,KAApB;AACD;AAED,OAAM,SAAUQ,iBAAV,CAA4BV,MAA5B,EAA8C;EAClD,OAAOA,MAAM,CAACC,KAAP,CAAaC,KAApB;AACD;AAED,OAAM,SAAUS,UAAV,CAAqBX,MAArB,EAAuC;EAC3C,OAAOA,MAAM,CAACC,KAAP,CAAaW,WAApB;AACD;AAED,OAAM,SAAUC,QAAV,CACJC,cADI,EAEJC,OAFI,EAEQ;EAEZ,MAAMC,IAAI,GAAGD,OAAO,CAACC,IAAR,CAAaf,KAAb,CAAmBC,KAAhC;EACA,MAAMU,WAAW,GAAGG,OAAO,CAACA,OAAR,CAAgBd,KAAhB,CAAsBW,WAA1C;;EAEA,IAAIE,cAAc,IAAIA,cAAc,CAACG,cAAf,CAA8BD,IAA9B,CAAtB,EAA2D;IACzD,OAAOJ,WAAW,CAACM,IAAZ,CAAkBC,CAAD,IAAYA,CAAC,CAACjB,KAAF,KAAYY,cAAc,CAACE,IAAD,CAAvD,CAAP;EACD;AACF","names":["getID","option","input","value","getLabel","getName","getDisabled","checked","getRequired","getPlaceholder","getClassName","getInvalidMessage","getOptions","optionItems","getValue","templateValues","options","name","hasOwnProperty","find","o"],"sources":["/home/fact-11/Desktop/formApp/formapp/node_modules/@steera/form-manager/src/Comp/FormRenderer/RenderComponents/SelectBox/SelectBox.utils.ts"],"sourcesContent":["import {FormRendererProps} from '../../FormRenderer.interface';\nimport {ComponentOptionItemType as OptionType} from '../../../Comp.interface';\n\nexport function getID(option: OptionType) {\n  return option.input.value;\n}\n\nexport function getLabel(option: OptionType) {\n  return option.input.value;\n}\n\nexport function getName(option: OptionType) {\n  return option.input.value;\n}\n\nexport function getDisabled(option: OptionType) {\n  return option.input.checked;\n}\n\nexport function getRequired(option: OptionType) {\n  return option.input.checked;\n}\n\nexport function getPlaceholder(option: OptionType) {\n  return option.input.value;\n}\n\nexport function getClassName(option: OptionType) {\n  return option.input.value;\n}\n\nexport function getInvalidMessage(option: OptionType) {\n  return option.input.value;\n}\n\nexport function getOptions(option: OptionType) {\n  return option.input.optionItems;\n}\n\nexport function getValue(\n  templateValues: FormRendererProps['templateValues'],\n  options: any\n) {\n  const name = options.name.input.value;\n  const optionItems = options.options.input.optionItems;\n\n  if (templateValues && templateValues.hasOwnProperty(name)) {\n    return optionItems.find((o: any) => o.value === templateValues[name]);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}